for i, bot in pairs(getBots()) do
    if getBot().name:upper() == bot.name:upper() then
        indexbot = i
    end
end

status = setting.webhook.botstatus
webhook = setting.webhook.storageinfo.link
message = setting.webhook.storageinfo.id
tilebreak = {}
infoid = {}
worlds = {}
backups = {}
random = {}
strings = ""
local tileBlock = 0
local tileSeed = 0
local tilePack = 0
local tileEvent = 0
local tileRetrieve = 0
index = 1
local identity = {}
local tileY = 0
identity.block = 1
identity.seed = 1
identity.pack = 1
identity.drop = 1
identity.event = 1
identity.takeseed = 1
identity.goodtime = os.time()
identity.indexBot = 1
identity.indexBackup = 1
identity.gaiax = 0
identity.gaiay = 0
identity.utx = 0
identity.uty = 0
identity.indexGen = 1
seedX = setting.storage.seed.drop.x - 1
seedY = setting.storage.seed.drop.y - 1
packX = setting.storage.pack.drop.x - 1
packY = setting.storage.pack.drop.y - 1
barisX = setting.storage.pnb.baris.x - 1
barisY = setting.storage.pnb.baris.y - 1
blockX = setting.storage.block.drop.x - 1
blockY = setting.storage.block.drop.y - 1
eventX = setting.storage.event.drop.x - 1
eventY = setting.storage.event.drop.y - 1

identity.splitt = function(str, ptr)
    if not ptr then 
        ptr = "%s"
    end
    local tbl = {}
    for string in string.gmatch(str, ptr) do
        table.insert(tbl, string) 
    end
    return tbl
end

for i =  1,setting.farmList.worldperbot do
    table.insert(worlds,setting.farmList.world[math.floor((indexbot - 1) * setting.farmList.worldperbot + i)])
end

for i = 1,#setting.mode.clearhistory.world do
    table.insert(random,setting.mode.clearhistory.world[i])
end

for i = 1,account.botswitch.backupPerbot do
    table.insert(backups,account.backup[math.floor((indexbot - 1) * account.botswitch.backupPerbot + i)])
end

for x = math.floor(setting.mode.pnbtile/2),1,-1 do
    x = x * -1
    table.insert(tilebreak,x)
end

for x = 0, math.ceil(setting.mode.pnbtile/2) - 1 do
    table.insert(tilebreak,x)
end

if tileY == 0 then
    if setting.typescript == "pnb" or setting.typescript == "sellgems" then
        if setting.mode.pnbmode == "up" then
            tileY = -2
        elseif setting.mode.pnbmode == "down" then
            tileY = 2
        end
    end
end

identity.genworld = function(threads)
    local alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    local withnum = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
    local generate = ""
    for i = 1,setting.mode.letter do
        local random = math.random(1,#alphabet)
        local randomnumber = math.random(1,#withnum)
        local acakalpa = string.sub(alphabet,random,random)
        local acaknomor = string.sub(withnum,randomnumber,randomnumber)
        if setting.mode.withnumber then
            generate = generate..acaknomor
        else
            generate = generate..acakalpa
        end
    end
    return generate
end
local find = identity.genworld(threads)

identity.punchitem = function(x,y)
    for _,tilepunch in pairs(tilebreak) do
        if getTile(x + tilepunch,y + tileY).fg ~= 0 or getTile(x + tilepunch,y + tileY).bg ~= 0 then
            return true
        end
    end
    return false
end

identity.placeitem = function(x,y)
    for _,tileplace in pairs(tilebreak) do
        if getTile(x + tileplace,y + tileY).fg == 0 and getTile(x+tileplace,y + tileY).bg == 0 then
            return true
        end
    end
    return false
end

identity.itemFloat = function(id)
	count = 0
	for _, obj in pairs(getObjects()) do
		if obj.id == id then
			count = count + obj.count
		end
	end
	return count
end

identity.writeJammer = function(text)
    local file = io.open("jammer.txt","a")
    file:write(text.."\n")
    file:close()
end

identity.writeFile = function(text)
    local file = io.open("status.txt","a")
    file:write(text.."\n")
    file:close()
end

identity.writeFiles = function(text)
    local file = io.open("InfoWorld.txt","a")
    file:write(text.."\n")
    file:close()
end

identity.randomguest = function()
    local random_letter = ""
    local function stringRandom()
        local randomm = math.random(1,3)
        if randomm == 1 then
            return string.char(math.random(97,122))
        elseif randomm == 2 then
            return string.char(math.random(65,90))
        else
            return string.char(math.random(48,57))
        end
    end
    for i = 1, 10 do
        random_letter = random_letter..stringRandom()
    end
    return random_letter
end

identity.backupacc = function(threads)
    ::BACK::
    for i = identity.indexBackup, #backups do
        thread = identity.splitt(backups[i],"([^"..account.symbol.."]+)")[1]
        threading = identity.splitt(backups[i],"([^"..account.symbol.."]+)")[2]
        num = identity.splitt(backups[i],"([^"..account.symbol.."]+)")[3] or ""
        if account.botswitch.proxy then
            if account.typeaccount == "guest" then
                if account.macposition == "left" then
                    addBot(identity.randomguest(),true,num)
                    sleep(1000)
                    setMac(thread)
                    setRid(threading)
                    connect()
                elseif account.macposition == "right" then
                    addBot(identity.randomguest(),true,num)
                    sleep(1000)
                    setMac(threading)
                    setRid(thread)
                    connect()
                end
            elseif account.typeaccount == "normal" then
                addBot(thread,threading,num)
                sleep(setting.delay.loginbot)
            end
        else
            if account.typeaccount == "guest" then
                if account.macposition == "left" then
                    addBot(identity.randomguest())
                    sleep(1000)
                    setMac(thread)
                    setRid(threading)
                    connect()
                elseif account.macposition == "right" then
                    addBot(identity.randomguest())
                    sleep(1000)
                    setMac(threading)
                    setRid(thread)
                    connect()
                end
            elseif account.typeaccount == "normal" then
                addBot(thread,threading)
                sleep(setting.delay.loginbot)
            end
        end
        sleep(setting.delay.loginbot)
        identity.botinfo("Changing bot to : [ ||"..getBot().name.."|| ]")
        sleep(250)
        if account.typeaccount == "normal" then
            while getBot().status ~= "online" do
                connect()
                sleep(setting.delay.reconnect)
                if getBot().status == "suspended" or getBot().status == "banned" or getBot().status == "aap detected" or getBot().status == "temporary ban" then
                    identity.botinfo("Failed switch bot to : [ ||"..getBot().name.."|| ] status is "..getBot().status..", Removing bots @everyone")
                    sleep(250)
                    identity.writeFile("[ "..getBot().name.." ] status is "..getBot().status.."")
                    sleep(250)
                    removeBot(getBot().name)
                    sleep(2000)
                    identity.indexBackup = identity.indexBackup + 1
                    if identity.indexBackup > #backups then
                        print("No more bots to switch, sc terminated")
                        sleep(250)
                        identity.botinfo("No more bots to switch, sc terminated @everyone")
                        sleep(250)
                        if setting.mode.removeBot then
                            removeBot(getBot().name)
                            sleep(2000)
                        end
                        error()
                    end
                    sleep(2000)
                    goto BACK
                end
            end
            if getBot().status:find("online") and getBot().level < account.botswitch.maxlevel then
                if account.botswitch.proxy then
                    identity.botinfo("Success switch bot to : [ ||"..getBot().name.."|| ], proxy : "..getBot().proxy.."")
                    sleep(250)
                else
                    identity.botinfo("Success switch bot to : [ ||"..getBot().name.."|| ]")
                    sleep(250)
                end
                break
            elseif getBot().status:find("online") and getBot().level >= account.botswitch.maxlevel then
                if account.botswitch.proxy then
                    identity.botinfo("Failed switch bot to : [ ||"..getBot().name.."|| ], proxy : "..getBot().proxy..", this bot has reached max level, rechecking ur backup bot list")
                    sleep(250)
                else
                    identity.botinfo("Failed switch bot to : [ ||"..getBot().name.."|| ], this bot has reached max level, rechecking ur backup bot list")
                    sleep(250)
                end
                removeBot(getBot().name)
                sleep(2000)
                identity.indexBackup = identity.indexBackup + 1
                if identity.indexBackup > #backups then
                    print("No more bots to switch, sc terminated")
                    sleep(250)
                    identity.botinfo("No more bots to switch, sc terminated @everyone")
                    sleep(250)
                    if setting.mode.removeBot then
                        removeBot(getBot().name)
                        sleep(2000)
                    end
                    error()
                end
            end
        elseif account.typeaccount == "guest" then
            while getBot().status ~= "online" do
                connect()
                sleep(setting.delay.reconnect)
                if getBot().status == "suspended" or getBot().status == "banned" or getBot().status == "got captcha" or getBot().status == "temporary ban" then
                    identity.botinfo("Bot backup : [ ||"..getBot().name.."|| ] status is "..getBot().status..", Terminated script @everyone")
                    sleep(250)
                    identity.writeFile("[ "..getMac()..""..account.symbol..""..getRid().." ] status is "..getBot().status.."")
                    sleep(250)
                    removeBot(getBot().name)
                    sleep(2000)
                    identity.indexBackup = identity.indexBackup + 1
                    if identity.indexBackup > #backups then
                        print("No more bots to switch, sc terminated")
                        sleep(250)
                        identity.botinfo("No more bots to switch, sc terminated @everyone")
                        sleep(250)
                        if setting.mode.removeBot then
                            removeBot(getBot().name)
                            sleep(2000)
                        end
                        error()
                    end
                    goto BACK
                end
            end
            if getBot().status:find("online") and getBot().level < account.botswitch.maxlevel then
                if account.botswitch.proxy then
                    identity.botinfo("Success add bot to : [ "..getMac()..""..account.symbol..""..getRid().." ], proxy : "..getBot().proxy.."")
                    sleep(250)
                else
                    identity.botinfo("Success add bot to : [ "..getMac()..""..account.symbol..""..getRid().." ]")
                    sleep(250)
                end
                break
            elseif getBot().status:find("online") and getBot().level >= account.botswitch.maxlevel then
                if account.botswitch.proxy then
                    identity.botinfo("Failed switch bot to : [ "..getMac()..""..account.symbol..""..getRid().." ], proxy : "..getBot().proxy..", this bot has reached max level, rechecking ur backup bot list")
                    sleep(250)
                else
                    identity.botinfo("Failed switch bot to : [ "..getMac()..""..account.symbol..""..getRid().." ], this bot has reached max level, rechecking ur backup bot list")
                    sleep(250)
                end
                removeBot(getBot().name)
                sleep(2000)
                identity.indexBackup = identity.indexBackup + 1
                if identity.indexBackup > #backups then
                    print("No more bots to switch, sc terminated")
                    sleep(250)
                    identity.botinfo("No more bots to switch, sc terminated @everyone")
                    sleep(250)
                    if setting.mode.removeBot then
                        removeBot(getBot().name)
                        sleep(2000)
                    end
                    error()
                end
            end
        end
    end
end

identity.botstatus = function()
    strings = ""
    for _, bot in pairs(getBots()) do
        if setting.webhook.short then
            strings = strings.."\n"..""..(string.sub(bot.name,1,3)).." | ||"..(string.sub(bot.world,1,3)).."|| | "..(string.upper(bot.status,1,2)).."" 
        else
            strings = strings.."\n"..""..(string.upper(bot.name)).." | ||"..(string.upper(bot.world)).."|| | "..(string.upper(bot.status)).."" 
        end
    end
    return strings
end

identity.hookblock = function()
    strings = ""
	for i = 1, #setting.storage.block.world do
        if setting.webhook.short then
            strings = strings.."\n[ ||"..(string.sub(setting.storage.block.world[i],1,3)).."|| ] "..(infoid[setting.storage.block.world[i]] or "?")..""
        else
            strings = strings.."\n[ ||"..string.upper(setting.storage.block.world[i]).."|| ] "..(infoid[setting.storage.block.world[i]] or "?")..""
        end
    end
    return strings
end

identity.hookseed = function()
    strings = ""
	for i = 1, #setting.storage.seed.world do
        if setting.webhook.short then
            strings = strings.."\n[ ||"..(string.sub(setting.storage.seed.world[i],1,3)).."|| ] "..(infoid[setting.storage.seed.world[i]] or "?")..""
        else
            strings = strings.."\n[ ||"..string.upper(setting.storage.seed.world[i]).."|| ] "..(infoid[setting.storage.seed.world[i]] or "?")..""
        end
    end
    return strings
end

identity.hookpack = function()
    strings = ""
	for i = 1, #setting.storage.pack.world do
        if setting.webhook.short then
            strings = strings.."\n[ ||"..(string.sub(setting.storage.pack.world[i],1,3)).."|| ] "..(infoid[setting.storage.pack.world[i]] or "?")..""
        else
            strings = strings.."\n[ ||"..string.upper(setting.storage.pack.world[i]).."|| ] "..(infoid[setting.storage.pack.world[i]] or "?")..""
        end
    end
    return strings
end

identity.hookevent = function()
    strings = ""
	for i = 1, #setting.storage.block.world do
        if setting.webhook.short then
            strings = strings.."\n[ ||"..(string.sub(setting.storage.event.world[i],1,3)).."|| ] "..(infoid[setting.storage.event.world[i]] or "?")..""
        else
            strings = strings.."\n[ ||"..string.upper(setting.storage.event.world[i]).."|| ] "..(infoid[setting.storage.event.world[i]] or "?")..""
        end
    end
    return strings
end

identity.botgems = function()
    local count = 0
    for _,bot in pairs(getBots()) do
        count = count + bot.gems
    end
    return count
end

identity.botinfo = function(content)
	if setting.webhook.access then
		text = [[
			$webHookUrl = "]]..status..[["
			$payload = @{
				content = "]]..content..[["
			}
			[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
			Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType "application/json"
		]]
		local file = io.popen("powershell -command -", "w")
		file:write(text)
		file:close()
	end
end

identity.goodtimes = function(estimates)
    local seconds = tonumber(estimates)
    if seconds <= 0 then
        return "00:00:00";
    else
        hours = string.format("%02.f", math.floor(estimates/3600));
        minutes = string.format("%02.f", math.floor(estimates/60 - (hours*60)));
        seconds = string.format("%02.f", math.floor(estimates - hours*3600 - minutes *60));
        return ""..hours.." : "..minutes.." : "..seconds
    end
end

identity.checkaccount = function(threads)
    identity.botinfo("[ ||"..getBot().name.."|| ] has reached level limit, changing bot if bot switch are enable")
    sleep(250)
    if findItem(setting.item.block) > 0 then
        identity.storingblocks(threads)
        sleep(250)
    end
    if findItem(setting.item.seed) > 0 then
        identity.storingseeds(threads)
        sleep(250)
    end
    if account.botswitch.switch then
        removeBot(getBot().name)
        sleep(2000)
        identity.backupacc(threads)
        sleep(250)
    else
        if setting.mode.generate then
            identity.warp(find,"")
            sleep(250)
            ::BACK::
            while getTile(math.floor(getBot().x / 32)+1,math.floor(getBot().y / 32) - 1).fg == 226 do
                punch(1,-1)
                sleep(setting.delay.place)
                identity.reconnect(find,"")
            end
            if findItem(226) > 0 then
                identity.storingjammer(threads)
                sleep(250)
            else
                goto BACK
            end
        end
        identity.warp(find,"")
        sleep(250)                          
        if setting.mode.removeBot then
            removeBot(getBot().name)
            sleep(2000)
        end
        error()
    end
end

identity.webhookinfo = function()
	if setting.webhook.storageinfo.access then
        if setting.typescript == "ht" or setting.typescript == "pnb" or setting.typescript == "rotation" then
            local text = [[
                $webHookUrl = "]]..webhook..[[/messages/]]..message..[["
                $payload = @{
                    username = "BizzantiuM's"
                    embeds = @(
                        @{
                            title = "AUTO MULTITASKING v1.0 [ ]]..string.upper(setting.typescript)..[[ ]"
                            color = "]]..math.random(111111,999999)..[["
                            fields = @(
                                @{
                                    name = ""
                                    value = "]].."RUNNING : [ "..identity.goodtimes(os.difftime(os.time(),identity.goodtime)).." ]"..[["
                                    inline = "false"
                                }
                                @{
                                    name = "BOT INFO"
                                    value = "]]..identity.botstatus()..[["
                                    inline = "false"
                                }
                                @{
                                    name = "STORAGE STATIC"
                                    value = "]]..""..[["
                                    inline = "false"
                                }
                                @{
                                    name = "BLOCK"
                                    value = "]]..identity.hookblock()..[["
                                    inline = "false"
                                }
                                @{
                                    name = "SEED"
                                    value = "]]..identity.hookseed()..[["
                                    inline = "true"
                                }
                                @{
                                    name = "PACK"
                                    value = "]]..identity.hookpack()..[["
                                    inline = "true"
                                }
                                @{
                                    name = "EVENT"
                                    value = "]]..identity.hookevent()..[["
                                    inline = "true"
                                }
                            )
                            footer = @{
                                text = "[Hydrotrium] Developed by BizzantiuM's`nLast updated : ]]..(os.date"%d/%m/%y":upper().." at ")..os.date("%I")..":"..os.date("%M").." "..os.date("%p"):upper()..[["
                            }
                        }
                    )
                }
                [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
                Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
            ]]
            local pipe = io.popen("powershell -command -", "w")
            pipe:write(text)
            pipe:close()
        elseif setting.typescript == "pt" then
            local text = [[
                $webHookUrl = "]]..webhook..[[/messages/]]..message..[["
                $payload = @{
                    username = "BizzantiuM's"
                    embeds = @(
                        @{
                            title = "AUTO MULTITASKING v1.0 [ ]]..string.upper(setting.typescript)..[[ ]"
                            color = "]]..math.random(111111,999999)..[["
                            fields = @(
                                @{
                                    name = ""
                                    value = "]].."RUNNING : [ "..identity.goodtimes(os.difftime(os.time(),identity.goodtime)).." ]"..[["
                                    inline = "false"
                                }
                                @{
                                    name = "BOT INFO"
                                    value = "]]..identity.botstatus()..[["
                                    inline = "false"
                                }
                                @{
                                    name = "STORAGE STATIC"
                                    value = "]]..""..[["
                                    inline = "false"
                                }
                                @{
                                    name = "SEED"
                                    value = "]]..identity.hookseed()..[["
                                    inline = "true"
                                }
                            )
                            footer = @{
                                text = "[Hydrotrium] Developed by BizzantiuM's`nLast updated : ]]..(os.date"%d/%m/%y":upper().." at ")..os.date("%I")..":"..os.date("%M").." "..os.date("%p"):upper()..[["
                            }
                        }
                    )
                }
                [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
                Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
            ]]
            local pipe = io.popen("powershell -command -", "w")
            pipe:write(text)
            pipe:close()
        end
    end
end

identity.reconnect = function(world,id,x,y)
    if getBot().world ~= world:upper() and getBot().status == "online" then 
        identity.botinfo("[ ||"..getBot().name.."|| ] at another world ??, trying to joining world again @everyone")
        sleep(250)
        print("[ "..getBot().name.." ] at another world ??, trying to joining world again")
        sleep(250)
        local count = 0
        while getBot().world ~= world:upper() do
            sendPacket("action|join_request\nname|"..world:upper().."\ninvitedWorld|0",3)
            sleep(setting.delay.warp)
            if getBot().world ~= world:upper() then 
                count = count + 1
                if count > 5 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to joining world again, terminated script @everyone")
                    sleep(250)
                    error()
                end
            end
        end
        if id ~= "" then
            local stucks = 0
            while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
                sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
                sleep(setting.delay.warp)
                if stucks > 3 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    sleep(250)
                    error()
                end
            end
        end
        if x and y then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        identity.botinfo("[ ||"..getBot().name.."|| ] success to joining world @everyone")
        sleep(250)
        print("[ "..getBot().name.." ] success to joining world")
        sleep(250)
    end
    if getBot().status ~= "online" then
        identity.botinfo("[ ||"..getBot().name.."|| ] status is "..getBot().status.." @everyone")
        sleep(250)
        print("[ "..getBot().name.." ] status is "..getBot().status.."")
        sleep(250)
        while getBot().status ~= "online" do
            connect()
            sleep(setting.delay.reconnect)
            if getBot().status == "suspended" or getBot().status == "banned" or getBot().status == "maintenance" then
                identity.botinfo("[ ||"..getBot().name.."|| ] status is "..getBot().status..", removing bot @everyone")
                sleep(250)
                print("[ "..getBot().name.." ] status is "..getBot().status..", removing bot")
                sleep(250)
                if setting.mode.removeBot then
                    removeBot(getBot().name)
                    sleep(2000)
                end
                error()
            end
        end
        local counts = 0
        while getBot().world ~= world:upper() do
            sendPacket("action|join_request\nname|"..world:upper().."\ninvitedWorld|0",3)
            sleep(setting.delay.warp)
            if getBot().world ~= world:upper() then 
                counts = counts + 1
                if counts > 5 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to joining world again, terminated script @everyone")
                    sleep(250)
                    error()
                end
            end
        end
        if id ~= "" then
            local stuckk = 0
            while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
                sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
                sleep(setting.delay.warp)
                if stuckk > 3 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    sleep(250)
                    error()
                end
            end
        end
        if x and y then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        identity.botinfo("[ ||"..getBot().name.."|| ] status is "..getBot().status.." @everyone")
        sleep(250)
        print("[ "..getBot().name.." ] status is "..getBot().status.."")
        sleep(250)
    end
    if getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 then
        identity.botinfo("[ ||"..getBot().name.."|| ] Stuck at white door ! @everyone")
        sleep(250)
        local stuck = 0
        if id ~= "" then
            while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
                sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
                sleep(setting.delay.warp)
                if stuck > 3 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    sleep(250)
                end
            end
        end
        if x and y then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        identity.botinfo("[ ||"..getBot().name.."|| ] Already back to pos ! @everyone")
        sleep(250)
    end
end

identity.warp = function(world,door)
    name = world
    if door ~= "" then
        name = name .. "|" ..door
    end
    if getBot().world ~= string.upper(world) then
        addHook("onvariant","nuked",function (varlist)
            if varlist[0] == "OnConsoleMessage" then
                if string.find(varlist[1],"inaccessible.") then
                    nuked = true
                end
                if string.find(varlist[1], "please try again later.") then
                    subserver = true
                end
                if string.find(varlist[1], "people in it.") then
                    people = true
                end
                if string.find(varlist[1], "Players lower than level") then
                    level = true
                end
            end
        end)
        local join = 0
        while getBot().world ~= string.upper(world) and not nuked and not subserver and not people and not level do
            sendPacket("action|join_request\nname|"..name.."\ninvitedWorld|0",3)
            sleep(setting.delay.warp)
            join = join + 1
            if join == 5 then
                server = true
            end
        end
        removeHooks()
        sleep(2000)
    end
    if getBot().world == string.upper(world) then
        if door ~= "" then
            local stuck = 0
            while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 and not wrong do
                sendPacket("action|join_request\nname|"..name.."\ninvitedWorld|0",3)
                sleep(setting.delay.warp)
                stuck = stuck + 1
                if stuck == 5 then
                    wrong = true
                end
            end
        end
    end
end

identity.takepickaxe = function(threads)
    ::BACK::
    world = identity.splitt(account.takepickaxe.world[index],"[^:]+")[1]
    door = identity.splitt(account.takepickaxe.world[index],"[^:]+")[2]
    setJob("Take pickaxe")
    sleep(250)
    identity.warp(world,door)
    sleep(250)
    if not server then
        if not people then
            if not level then
                if not subserver then
                    if not nuked then
                        if not wrong then
                            if findItem(98) == 0 then
                                for _, obj in pairs(getObjects()) do
                                    if obj.id == 98 then
                                        findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                                        sleep(1000)
                                        collect(2)
                                        sleep(1000)
                                        identity.reconnect(world,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
                                    end
                                    if findItem(98) > 0  then
                                        wear(98)
                                        sleep(500)
                                        move(-1,0)
                                        sleep(1000)
                                        drop(98,findItem(98) - 1)
                                        sleep(1000)
                                        identity.reconnect(world,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
                                        break
                                    end
                                end
                            end
                        else
                            wrong = false
                            sleep(5000)
                            print("Id door world take support items is wrong, check ur id door !!")
                            sleep(250)
                            identity.botinfo("Id door world take support items is wrong, check ur id door !, terminated script @everyone")
                            sleep(250)
                            error()
                        end
                    else
                        nuked = false
                        sleep(5000)
                        print("World take support items is nuked, check ur world !!")
                        sleep(250)
                        identity.botinfo("World take support items is nuked, check ur world !, terminated script @everyone")
                        sleep(250)
                        error()
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                    sleep(250)
                    identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                    sleep(120000)
                    goto BACK
                end
            else
                level = false
                sleep(5000)
                print("World : "..world.." has level limit, change ur level world limit")
                sleep(250)
                identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                sleep(250)
                error()
            end
        else
            people = false
            sleep(5000)
            print("World : "..world.." has full people, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
            sleep(120000)
            goto BACK
        end
    else
        server = false
        sleep(5000)
        print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
        sleep(250)
        identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
        sleep(120000)
        goto BACK
    end
end

identity.buying = function(threads)
    setJob("Buying packs")
    sleep(250)
    if findItem(112) >= setting.pack.mingems then
        if setting.mode.upbackpack then
            while getBot().slots < 36 do
                sendPacket("action|buy\nitem|upgrade_backpack",2)
                sleep(4000)
            end
        end
        while findItem(112) > setting.pack.price do
            sendPacket("action|buy\nitem|"..setting.pack.debug,2)
            sleep(4000)
            if findItem(setting.pack.packList[1]) >= 200 then
                break
            end
        end
    end
end

identity.joinworld = function(threads)
    for _, world in pairs(random) do
        ::BACK::
        setJob("Clearing history")
        sleep(250)
        identity.warp(world,"")
        sleep(250)
        identity.reconnect(world,"")
        if not server then
            if not people then
                if not level then
                    if not subserver then
                        if not nuked then
                        else
                            nuked = false
                            sleep(5000)
                            print("World clearing history has nuked!!, change ur world history list")
                            sleep(250)
                            identity.botinfo("World clearing history has nuked!!, change ur world history list. SC Terminated @everyone")
                            sleep(250)
                            error()
                        end
                    else
                        subserver = false
                        sleep(5000)
                        print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                        sleep(250)
                        identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                        sleep(250)
                        sleep(120000)
                        goto BACK
                    end
                else
                    level = false
                    sleep(5000)
                    print("World : "..world.." has level limit, change ur world history list")
                    sleep(250)
                    identity.botinfo("World : "..world.." has level limit, change ur world history list. SC Terminated @everyone")
                    sleep(250)
                    error()
                end
            else
                people = false
                sleep(5000)
                print("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(250)
                identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(120000)
                goto BACK
            end
        else
            server = false
            sleep(5000)
            print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes @everyone")
            sleep(120000)
            goto BACK
        end
    end
end

identity.breakjammers = function()
    for _, world in pairs(setting.mode.worldtobreak) do
        ::BACK::
        setJob("Take back jammer")
        sleep(250)
        identity.warp(world,"")
        sleep(250)
        identity.reconnect(world,"")
        if not server then
            if not people then
                if not level then
                    if not subserver then
                        if not nuked then
                            while getTile(math.floor(getBot().x / 32)+1,math.floor(getBot().y / 32) - 1).fg == 226 do
                                punch(1,-1)
                                sleep(setting.delay.place)
                                identity.reconnect(world,"")
                            end
                        else
                            nuked = false
                            sleep(5000)
                            print("World clearing history has nuked!!, change ur world history list")
                            sleep(250)
                            identity.botinfo("World clearing history has nuked!!, change ur world history list. SC Terminated @everyone")
                            sleep(250)
                            error()
                        end
                    else
                        subserver = false
                        sleep(5000)
                        print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                        sleep(250)
                        identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                        sleep(250)
                        sleep(120000)
                        goto BACK
                    end
                else
                    level = false
                    sleep(5000)
                    print("World : "..world.." has level limit, change ur world history list")
                    sleep(250)
                    identity.botinfo("World : "..world.." has level limit, change ur world history list. SC Terminated @everyone")
                    sleep(250)
                    error()
                end
            else
                people = false
                sleep(5000)
                print("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(250)
                identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(120000)
                goto BACK
            end
        else
            server = false
            sleep(5000)
            print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes @everyone")
            sleep(120000)
            goto BACK
        end
    end
end

identity.storingevents = function(threads)
    for i = identity.event , #setting.storage.event.world do
        ::Here::
        setJob("Dropping events")
        sleep(250)
        world = setting.storage.event.world[i]
        door = setting.storage.event.door
        identity.warp(world,door)
        sleep(250)
        identity.webhookinfo()
        sleep(250)
        if not server then
            if not people then
                if not level then
                    if not subserver then
                        if not nuked then
                            if not wrong then
                                if identity.itemFloat(setting.item.event[1]) >= setting.storage.event.limit then
                                    infoid[world] = "["..identity.itemFloat(setting.item.event[1]).."] LIMIT !!!"
                                    identity.botinfo("Events storage : [ ||"..world.."|| ] has reached limit, skipped world @everyone")
                                    sleep(250)
                                    print("Events storage : [ "..world.." ] has reached limit, skipped world")
                                    sleep(250)
                                    identity.event = identity.event + 1
                                    if identity.event > #setting.storage.event.world then
                                        infoid[world] = "["..identity.itemFloat(setting.item.event[1]).."] LIMIT !!!"
                                        identity.botinfo("All events storage has reached limit, Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                        sleep(250)
                                        print("All events storage has reached limit, Removing bot : [ "..getBot().name.." ]")
                                        sleep(250)
                                        if setting.mode.removeBot then
                                            removeBot(getBot().name)
                                            sleep(2000)
                                        end
                                        error()
                                    end
                                    tileEvent = 0
                                else
                                    for y,pack in pairs(setting.item.event) do
                                        for i,tile in pairs(getTiles()) do
                                            if setting.mode.separated then
                                                if tile.fg == 0 or tile.bg == 0 then
                                                    ::BACK::
                                                    findPath(eventX + (tileEvent),eventY - (y - 1))
                                                    sleep(1000)
                                                    local count = 0
                                                    identity.reconnect(world,door,eventX + (tileEvent),eventY - (y - 1))
                                                    if eventX + (tileEvent) >= 98 then
                                                        eventY = eventY - 1
                                                        tileEvent = 0
                                                    end
                                                    while findItem(pack) > 0 do
                                                        drop(pack)
                                                        sleep(setting.delay.drop)
                                                        identity.reconnect(world,door,eventX + (tileEvent),eventY - (y - 1))
                                                        count = count + 1
                                                        if count >= 2 then
                                                            tileEvent = tileEvent + 1
                                                            goto BACK
                                                        end
                                                    end
                                                end
                                                if findItem(pack) == 0 then
                                                    break
                                                end
                                            else
                                                if tile.fg == 0 or tile.bg == 0 then
                                                    ::BACK::
                                                    findPath(eventX + (tileEvent),eventY)
                                                    sleep(1000)
                                                    local count = 0
                                                    identity.reconnect(world,door,eventX + (tileEvent),eventY)
                                                    if eventX + (tileEvent) >= 98 then
                                                        eventY = eventY - 1
                                                        tileEvent = 0
                                                    end
                                                    while findItem(pack) > 0 do
                                                        drop(pack)
                                                        sleep(setting.delay.drop)
                                                        identity.reconnect(world,door,eventX + (tileEvent),eventY)
                                                        count = count + 1
                                                        if count >= 2 then
                                                            tileEvent = tileEvent + 1
                                                            goto BACK
                                                        end
                                                    end
                                                end
                                                if findItem(pack) == 0 then
                                                    break
                                                end
                                            end
                                        end
                                    end
                                    sleep(100)
                                    break
                                end
                            else
                                infoid[world] = "WRONG DOOR !!!"
                                wrong = false
                                sleep(5000)
                                print("[ "..world.." ] Id door events storage is wrong, check ur id door!")
                                sleep(250)
                                identity.botinfo("[ ||"..world.."|| ] Id door events storage is wrong, check ur id door! @everyone")
                                sleep(250)
                                identity.event = identity.event + 1
                                if identity.event > #setting.storage.event.world then
                                    print("All events storage has reached limit")
                                    sleep(250)
                                    identity.botinfo("All events storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                    sleep(250)
                                    if setting.mode.removeBot then
                                        removeBot(getBot().name)
                                        sleep(2000)
                                    end
                                    error()
                                end
                                tileEvent = 0
                            end
                        else
                            infoid[world] = "NUKED !!!"
                            nuked = false
                            sleep(5000)
                            print("[ "..world.." ] event Storage is NUKED, check ur storage!")
                            sleep(250)
                            identity.botinfo("[ "..world.." ] event Storage is NUKED, check ur storage! @everyone")
                            sleep(250)
                            identity.event = identity.event + 1
                            if identity.event > #setting.storage.event.world then
                                print("All events storage has reached limit!")
                                sleep(250)
                                identity.botinfo("All events storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                sleep(250)
                                if setting.mode.removeBot then
                                    removeBot(getBot().name)
                                    sleep(2000)
                                end
                                error()
                            end
                            tileEvent = 0
                        end
                    else
                        subserver = false
                        sleep(5000)
                        print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                        sleep(250)
                        identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                        sleep(120000)
                        goto Here
                    end
                else
                    level = false
                    sleep(5000)
                    print("World : "..world.." has level limit, change ur level world limit")
                    sleep(250)
                    identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                    sleep(250)
                    error()
                end
            else
                people = false
                sleep(5000)
                print("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(250)
                identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(120000)
                goto Here
            end
        else
            server = false
            sleep(5000)
            print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
            sleep(120000)
            goto Here
        end
    end
    infoid[world] = "["..identity.itemFloat(setting.item.event[1]).."]"
    if setting.mode.clearhistory.access then
        identity.joinworld(threads)
        sleep(250)
    end
end

identity.storingpacks = function(threads)
    for i = identity.pack , #setting.storage.pack.world do
        ::Here::
        setJob("Dropping packs")
        sleep(250)
        world = setting.storage.pack.world[i]
        door = setting.storage.pack.door
        identity.warp(world,door)
        sleep(250)
        identity.webhookinfo()
        sleep(250)
        if not server then
            if not people then
                if not level then
                    if not subserver then
                        if not nuked then
                            if not wrong then
                                if identity.itemFloat(setting.pack.packList[1]) >= setting.storage.pack.limit then
                                    infoid[world] = "["..identity.itemFloat(setting.pack.packList[1]).."] LIMIT !!!"
                                    identity.botinfo("Packs storage : [ ||"..world.."|| ] has reached limit, skipped world @everyone")
                                    sleep(250)
                                    print("Packs storage : [ "..world.." ] has reached limit, skipped world")
                                    sleep(250)
                                    identity.pack = identity.pack + 1
                                    if identity.pack > #setting.storage.pack.world then
                                        infoid[world] = "["..identity.itemFloat(setting.pack.packList[1]).."] LIMIT !!!"
                                        identity.botinfo("All packs storage has reached limit, Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                        sleep(250)
                                        print("All packs storage has reached limit, Removing bot : [ "..getBot().name.." ]")
                                        sleep(250)
                                        world = find
                                        if setting.mode.generate then
                                            identity.warp(world,"")
                                            sleep(250)
                                            while getTile(math.floor(getBot().x / 32)+1,math.floor(getBot().y / 32) - 1).fg == 226 do
                                                punch(1,-1)
                                                sleep(setting.delay.place)
                                                identity.reconnect(world,"")
                                            end
                                            identity.storingjammer(threads)
                                            sleep(250)
                                        end
                                        identity.warp(world,"")  
                                        sleep(250)
                                        if setting.mode.removeBot then
                                            removeBot(getBot().name)
                                            sleep(2000)
                                        end
                                        error()
                                    end
                                    tilePack = 0
                                else
                                    for y,pack in pairs(setting.pack.packList) do
                                        for i,tile in pairs(getTiles()) do
                                            if setting.pack.separated then
                                                if tile.fg == 0 or tile.bg == 0 then
                                                    ::BACK::
                                                    findPath(packX + (tilePack),packY - (y-1))
                                                    sleep(1000)
                                                    local count = 0
                                                    identity.reconnect(world,door,packX + (tilePack),packY - (y-1))
                                                    if packX + (tilePack) >= 98 then
                                                        packY = packY - 1
                                                        tilePack = 0
                                                    end
                                                    while findItem(pack) > 0 do
                                                        drop(pack)
                                                        sleep(setting.delay.drop)
                                                        identity.reconnect(world,door,packX + (tilePack),packY - (y-1))
                                                        count = count + 1
                                                        if count >= 2 then
                                                            tilePack = tilePack + 1
                                                            goto BACK
                                                        end
                                                    end
                                                end
                                                if findItem(pack) == 0 then
                                                    break
                                                end
                                            else
                                                if tile.fg == 0 or tile.bg == 0 then
                                                    ::BACK::
                                                    findPath(packX + (tilePack),packY)
                                                    sleep(1000)
                                                    local count = 0
                                                    identity.reconnect(world,door,packX + (tilePack),packY)
                                                    if packX + (tilePack) >= 98 then
                                                        packY = packY - 1
                                                        tilePack = 0
                                                    end
                                                    while findItem(pack) > 0 do
                                                        drop(pack)
                                                        sleep(setting.delay.drop)
                                                        identity.reconnect(world,door,packX + (tilePack),packY)
                                                        count = count + 1
                                                        if count >= 2 then
                                                            tilePack = tilePack + 1
                                                            goto BACK
                                                        end
                                                    end
                                                end
                                                if findItem(pack) == 0 then
                                                    break
                                                end
                                            end
                                        end
                                    end
                                    sleep(100)
                                    break
                                end
                            else
                                infoid[world] = "WRONG DOOR !!!"
                                wrong = false
                                sleep(5000)
                                print("[ "..world.." ] Id door packs storage is wrong, check ur id door!")
                                sleep(250)
                                identity.botinfo("[ ||"..world.."|| ] Id door packs storage is wrong, check ur id door! @everyone")
                                sleep(250)
                                identity.pack = identity.pack + 1
                                if identity.pack > #setting.storage.pack.world then
                                    print("All packs storage has reached limit")
                                    sleep(250)
                                    identity.botinfo("All packs storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                    sleep(250)
                                    if setting.mode.removeBot then
                                        removeBot(getBot().name)
                                        sleep(2000)
                                    end
                                    error()
                                end
                                tilePack = 0
                            end
                        else
                            infoid[world] = "NUKED !!!"
                            nuked = false
                            sleep(5000)
                            print("[ "..world.." ] packs Storage is NUKED, check ur storage!")
                            sleep(250)
                            identity.botinfo("[ "..world.." ] packs Storage is NUKED, check ur storage! @everyone")
                            sleep(250)
                            identity.pack = identity.pack + 1
                            if identity.pack > #setting.storage.pack.world then
                                print("All packs storage has reached limit!")
                                sleep(250)
                                identity.botinfo("All packs storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                sleep(250)
                                if setting.mode.removeBot then
                                    removeBot(getBot().name)
                                    sleep(2000)
                                end
                                error()
                            end
                            tilePack = 0
                        end
                    else
                        subserver = false
                        sleep(5000)
                        print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                        sleep(250)
                        identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                        sleep(120000)
                        goto Here
                    end
                else
                    level = false
                    sleep(5000)
                    print("World : "..world.." has level limit, change ur level world limit")
                    sleep(250)
                    identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                    sleep(250)
                    error()
                end
            else
                people = false
                sleep(5000)
                print("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(250)
                identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(120000)
                goto Here
            end
        else
            server = false
            sleep(5000)
            print("Bot : "..name.." idiot server, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("Bot : "..name.." idiot server, sleeping for 2 minutes@everyone")
            sleep(120000)
            goto Here
        end
    end
    infoid[world] = "["..identity.itemFloat(setting.pack.packList[1]).."]"
    if setting.mode.clearhistory.access then
        identity.joinworld(threads)
        sleep(250)
    end
end

identity.storingseeds = function(threads)
    for i = identity.seed, #setting.storage.seed.world do
        ::Here::
        setJob("Dropping seeds")
        sleep(250)
        world = setting.storage.seed.world[i]
        door = setting.storage.seed.door
        identity.warp(world,door)
        sleep(250)
        identity.webhookinfo()
        sleep(250)
        if not server then
            if not people then
                if not level then
                    if not subserver then
                        if not nuked then
                            if not wrong then
                                if getBot().level >= account.botswitch.maxlevel and account.botswitch.access then
                                    while findItem(setting.item.seed) > 0 do
                                        drop(setting.item.seed)
                                        sleep(setting.delay.drop)
                                        move(-1,0)
                                        identity.reconnect(world,door,-1,0)
                                    end
                                    if findItem(setting.item.seed) == 0 then
                                        break
                                    end
                                else
                                    if identity.itemFloat(setting.item.seed) >= setting.storage.seed.limit then
                                        infoid[world] = "["..identity.itemFloat(setting.item.seed).."] LIMIT !!!"
                                        identity.botinfo("Seeds storage : [ ||"..world.."|| ] has reached limit, skipped world @everyone")
                                        sleep(250)
                                        print("Seeds storage : [ "..world.." ] has reached limit, skipped world")
                                        sleep(250)
                                        identity.seed = identity.seed + 1
                                        if identity.seed > #setting.storage.seed.world then
                                            infoid[world] = "["..identity.itemFloat(setting.item.seed).."] LIMIT !!!"
                                            identity.botinfo("All seeds storage has reached limit, Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                            sleep(250)
                                            print("All seeds storage has reached limit, Removing bot : [ "..getBot().name.." ] @everyone")
                                            sleep(250)
                                            if setting.mode.generate then
                                                identity.warp(find,"")
                                                sleep(250)
                                                while getTile(math.floor(getBot().x / 32)+1,math.floor(getBot().y / 32) - 1).fg == 226 do
                                                    punch(1,-1)
                                                    sleep(setting.delay.place)
                                                    identity.reconnect(find,"")
                                                end
                                                identity.storingjammer(threads)
                                                sleep(250)
                                            end
                                            identity.warp(find,"") 
                                            sleep(250) 
                                            if setting.mode.removeBot then
                                                removeBot(getBot().name)
                                                sleep(2000)
                                            end
                                            error()
                                        end
                                        tileSeed = 0
                                    else
                                        for i,tile in pairs(getTiles()) do
                                            if tile.fg == 0 or tile.bg == 0 then
                                                ::BACK::
                                                findPath(seedX + (tileSeed),seedY)
                                                sleep(1000)
                                                local count = 0
                                                identity.reconnect(world,door,seedX + (tileSeed),seedY)
                                                if seedX + (tileSeed) >= 98 then
                                                    seedY = seedY - 1
                                                    tileSeed = 0
                                                end
                                                while findItem(setting.item.seed) > 0 do
                                                    drop(setting.item.seed)
                                                    sleep(setting.delay.drop)
                                                    identity.reconnect(world,door,seedX + (tileSeed),seedY)
                                                    count = count + 1
                                                    if count >= 2 then
                                                        tileSeed = tileSeed + 1
                                                        goto BACK
                                                    end
                                                end
                                            end
                                            if findItem(setting.item.seed) == 0 then
                                                break
                                            end
                                        end
                                        sleep(100)
                                        break
                                    end
                                end
                            else
                                infoid[world] = "WRONG DOOR !!!"
                                wrong = false
                                sleep(5000)
                                print("[ "..world.." ] Id door seeds storage is wrong, check ur id door!")
                                sleep(250)
                                identity.botinfo("[ ||"..world.."|| ] Id door seeds storage is wrong, check ur id door! @everyone")
                                sleep(250)
                                identity.seed = identity.seed + 1
                                if identity.seed > #setting.storage.seed.world then
                                    print("All seeds storage has reached limit")
                                    sleep(250)
                                    identity.botinfo("All seeds storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                    sleep(250)
                                    if setting.mode.removeBot then
                                        removeBot(getBot().name)
                                        sleep(2000)
                                    end
                                    error()
                                end
                                tileSeed = 0
                            end
                        else
                            infoid[world] = "NUKED !!!"
                            nuked = false
                            sleep(5000)
                            print("[ "..world.." ] seeds Storage is NUKED, check ur storage!")
                            sleep(250)
                            identity.botinfo("[ "..world.." ] seeds Storage is NUKED, check ur storage! @everyone")
                            sleep(250)
                            identity.seed = identity.seed + 1
                            if identity.seed > #setting.storage.seed.world then
                                print("All seeds storage has reached limit!")
                                sleep(250)
                                identity.botinfo("All seeds storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                sleep(250)
                                if setting.mode.removeBot then
                                    removeBot(getBot().name)
                                    sleep(2000)
                                end
                                error()
                            end
                            tileSeed = 0
                        end
                    else
                        subserver = false
                        sleep(5000)
                        print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                        sleep(250)
                        identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                        sleep(120000)
                        goto Here
                    end
                else
                    level = false
                    sleep(5000)
                    print("World : "..world.." has level limit, change ur level world limit")
                    sleep(250)
                    identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                    sleep(250)
                    error()
                end
            else
                people = false
                sleep(5000)
                print("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(250)
                identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(120000)
                goto Here
            end
        else
            server = false
            sleep(5000)
            print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
            sleep(120000)
            goto Here
        end
    end
    infoid[world] = "["..identity.itemFloat(setting.item.seed).."]"
    if setting.mode.clearhistory.access then
        identity.joinworld(threads)
        sleep(250)
    end
end

identity.take = function(threads)
    for i = identity.block , #setting.storage.block.world do
        ::Here::
        setJob("Take blocks")
        sleep(250)
		world = setting.storage.block.world[i]
        door = setting.storage.block.door
        identity.warp(world,door)
        sleep(250)
        identity.webhookinfo()
        sleep(250)
        if not server then
            if not people then
                if not level then
                    if not subserver then
                        if not nuked then
                            if not wrong then
                                if identity.itemFloat(setting.item.block) == 0 then
                                    infoid[world] = ""..identity.itemFloat(setting.item.block).." EMPTY !!"
                                    identity.botinfo("Take blocks storage : [ ||"..world.."|| ] has empty, skipped world @everyone")
                                    sleep(250)
                                    print("Take blocks storage : [ "..world.." ] has empty, skipped world")
                                    sleep(250)
                                    identity.block = identity.block + 1
                                    if identity.block > #setting.storage.block.world then
                                        infoid[world] = ""..identity.itemFloat(setting.item.block).." EMPTY !!"
                                        identity.botinfo("All take blocks storage has empty, Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                        sleep(250)
                                        print("All take blocks storage has empty, Removing bot : [ "..getBot().name.." ]")
                                        sleep(250)
                                        identity.webhookinfo("All take blocks storage has empty, Removing bot!")
                                        sleep(250)
                                        identity.storingseeds(threads)
                                        sleep(250)
                                        world = find
                                        if setting.mode.generate then
                                            identity.warp(world,"")
                                            sleep(250)
                                            while getTile(math.floor(getBot().x / 32)+1,math.floor(getBot().y / 32) - 1).fg == 226 do
                                                punch(1,-1)
                                                sleep(setting.delay.place)
                                                identity.reconnect(world,"")
                                            end
                                            identity.storingjammer(threads)
                                            sleep(250)
                                        end
                                        identity.warp(world,"")   
                                        sleep(250)
                                        if setting.mode.removeBot then
                                            removeBot(getBot().name)
                                            sleep(2000)
                                        end
                                        error()
                                    end
                                else
                                    for _, object in pairs(getObjects()) do
                                        if object.id == setting.item.block then
                                            findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                            sleep(1000)
                                            collect(2,112)
                                            sleep(1000)
                                            identity.reconnect(world,door,math.floor((object.x)/32), math.floor((object.y)/32))
                                        end
                                        if findItem(setting.item.block) >= setting.mode.pnbtile then
                                            break
                                        end
                                    end
                                    sleep(100)
                                    break
                                end
                            else
                                infoid[world] = "WRONG DOOR !!!"
                                wrong = false
                                sleep(5000)
                                print("[ "..world.." ] Id door Take blocks storage is wrong, check ur id door!")
                                sleep(250)
                                identity.botinfo("[ ||"..world.."|| ] Id door Take blocks storage is wrong, check ur id door! @everyone")
                                sleep(250)
                                identity.block = identity.block + 1
                                if identity.block > #setting.storage.block.world then
                                    print("All Take blocks storage has reached limit")
                                    sleep(250)
                                    identity.botinfo("All Take blocks storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                    sleep(250)
                                    if setting.mode.removeBot then
                                        removeBot(getBot().name)
                                        sleep(2000)
                                    end
                                    error()
                                end
                            end
                        else
                            infoid[world] = "NUKED !!!"
                            nuked = false
                            sleep(5000)
                            print("[ "..world.." ] take blocks Storage is NUKED, check ur storage!")
                            sleep(250)
                            identity.botinfo("[ "..world.." ] take blocks Storage is NUKED, check ur storage! @everyone")
                            sleep(250)
                            identity.block = identity.block + 1
                            if identity.block > #setting.storage.block.world then
                                print("All take blocks storage has reached limit!")
                                sleep(250)
                                identity.botinfo("All take blocks storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                sleep(250)
                                if setting.mode.removeBot then
                                    removeBot(getBot().name)
                                    sleep(2000)
                                end
                                error()
                            end
                        end
                    else
                        subserver = false
                        sleep(5000)
                        print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                        sleep(250)
                        identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                        sleep(120000)
                        goto Here
                    end
                else
                    level = false
                    sleep(5000)
                    print("World : "..world.." has level limit, change ur level world limit")
                    sleep(250)
                    identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                    sleep(250)
                    error()
                end
            else
                people = false
                sleep(5000)
                print("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(250)
                identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(120000)
                goto Here
            end
        else
            server = false
            sleep(5000)
            print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
            sleep(120000)
            goto Here
        end
    end
    infoid[world] = "["..identity.itemFloat(setting.item.block).."]"
    identity.recycles(threads)
    sleep(250)
    identity.line(threads)
    sleep(250)
end

identity.storingblocks = function(threads)
    for i = identity.drop , #setting.storage.block.world do
        ::Here::
        world = setting.storage.block.world[i]
        door = setting.storage.block.door
        setJob("Dropping Blocks")
        sleep(250)
        identity.warp(world,door)
        sleep(250)
        identity.webhookinfo()
        sleep(250)
        if not server then
            if not people then
                if not level then
                    if not subserver then
                        if not nuked then
                            if not wrong then
                                if getBot().level >= account.botswitch.maxlevel and account.botswitch.access then
                                    while findItem(setting.item.block) > 0 do
                                        drop(setting.item.block)
                                        sleep(setting.delay.drop)
                                        move(-1,0)
                                        identity.reconnect(world,door,-1,0)
                                    end
                                    if findItem(setting.item.block) == 0 then
                                        break
                                    end
                                else
                                    if identity.itemFloat(setting.item.block) >= setting.storage.block.limit then
                                        infoid[world] = "["..identity.itemFloat(setting.item.block).."] LIMIT !!!"
                                        identity.botinfo("Blocks storage : [ ||"..world.."|| ] has reached limit, skipped world @everyone")
                                        sleep(250)
                                        print("Blocks storage : [ "..world.." ] has reached limit, skipped world")
                                        sleep(250)
                                        identity.drop = identity.drop + 1
                                        if identity.drop > #setting.storage.block.world then
                                            infoid[world] = "["..identity.itemFloat(setting.item.block).."] LIMIT !!!"
                                            identity.botinfo("All blocks storage has reached limit, Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                            sleep(250)
                                            print("All blocks storage has reached limit, Removing bot : [ "..getBot().name.." ] @everyone")
                                            sleep(250)
                                            if setting.mode.generate then
                                                identity.warp(find,"")
                                                sleep(250)
                                                while getTile(math.floor(getBot().x / 32)+1,math.floor(getBot().y / 32) - 1).fg == 226 do
                                                    punch(1,-1)
                                                    sleep(setting.delay.place)
                                                    identity.reconnect(find,"")
                                                end
                                                identity.storingjammer(threads)
                                                sleep(250)
                                            end
                                            identity.warp(find,"")  
                                            sleep(250)
                                            if setting.mode.removeBot then
                                                removeBot(getBot().name)
                                                sleep(2000)
                                            end
                                            error()
                                        end
                                        tileBlock = 0
                                    else
                                        for i,tile in pairs(getTiles()) do
                                            if tile.fg == 0 or tile.bg == 0 then
                                                ::BACK::
                                                findPath(blockX + (tileBlock),blockY)
                                                sleep(1000)
                                                local count = 0
                                                identity.reconnect(world,door,blockX + (tileBlock),blockY)
                                                if blockX + (tileBlock) >= 98 then
                                                    blockY = blockY - 1
                                                    tileBlock = 0
                                                end
                                                while findItem(setting.item.block) > 0 do
                                                    drop(setting.item.block)
                                                    sleep(setting.delay.drop)
                                                    identity.reconnect(world,door,blockX + (tileBlock),blockY)
                                                    count = count + 1
                                                    if count >= 2 then
                                                        tileBlock = tileBlock + 1
                                                        goto BACK
                                                    end
                                                end
                                            end
                                            if findItem(setting.item.block) == 0 then
                                                break
                                            end
                                        end
                                        sleep(100)
                                        break
                                    end
                                end
                            else
                                infoid[world] = "WRONG DOOR !!!"
                                wrong = false
                                sleep(5000)
                                print("[ "..world.." ] Id door blocks storage is wrong, check ur id door!")
                                sleep(250)
                                identity.botinfo("[ ||"..world.."|| ] Id door blocks storage is wrong, check ur id door! @everyone")
                                sleep(250)
                                identity.drop = identity.drop + 1
                                if identity.drop > #setting.storage.block.world then
                                    print("All blocks storage has reached limit")
                                    sleep(250)
                                    identity.botinfo("All blocks storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                    sleep(250)
                                    if setting.mode.removeBot then
                                        removeBot(getBot().name)
                                        sleep(2000)
                                    end
                                    error()
                                end
                                tileBlock = 0
                            end
                        else
                            infoid[world] = "NUKED !!!"
                            nuked = false
                            sleep(5000)
                            print("[ "..world.." ] blocks Storage is NUKED, check ur storage!")
                            sleep(250)
                            identity.botinfo("[ "..world.." ] blocks Storage is NUKED, check ur storage! @everyone")
                            sleep(250)
                            identity.drop = identity.drop + 1
                            if identity.drop > #setting.storage.block.world then
                                print("All blocks storage has reached limit!")
                                sleep(250)
                                identity.botinfo("All blocks storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                sleep(250)
                                if setting.mode.removeBot then
                                    removeBot(getBot().name)
                                    sleep(2000)
                                end
                                error()
                            end
                            tileBlock = 0
                        end
                    else
                        subserver = false
                        sleep(5000)
                        print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                        sleep(250)
                        identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                        sleep(120000)
                        goto Here
                    end
                else
                    level = false
                    sleep(5000)
                    print("World : "..world.." has level limit, change ur level world limit")
                    sleep(250)
                    identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                    sleep(250)
                    error()
                end
            else
                people = false
                sleep(5000)
                print("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(250)
                identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(120000)
                goto Here
            end
        else
            server = false
            sleep(5000)
            print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
            sleep(120000)
            goto Here
        end
    end
    infoid[world] = "["..identity.itemFloat(setting.item.block).."]"
    if setting.mode.clearhistory.access then
        identity.joinworld(threads)
        sleep(250)
    end
end

identity.takingseed = function(threads)
    for i = identity.takeseed , #setting.storage.seed.world do
        ::Here::
        setJob("Take seed")
        sleep(250)
		world = setting.storage.seed.world[i]
        door = setting.storage.seed.door
        identity.warp(world,door)
        sleep(250)
        identity.webhookinfo()
        sleep(250)
        if not server then
            if not people then
                if not level then
                    if not subserver then
                        if not nuked then
                            if not wrong then
                                if identity.itemFloat(setting.item.seed) == 0 then
                                    infoid[world] = ""..identity.itemFloat(setting.item.seed).." EMPTY !!"
                                    identity.botinfo("Seeds storage : [ ||"..world.."|| ] has empty, skipped world @everyone")
                                    sleep(250)
                                    print("Seeds storage : [ "..world.." ] has empty, skipped world")
                                    sleep(250)
                                    identity.takeseed = identity.takeseed + 1
                                    if identity.takeseed > #setting.storage.seed.world then
                                        infoid[world] = ""..identity.itemFloat(setting.item.seed).." EMPTY !!"
                                        identity.botinfo("All seeds storage has empty, Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                        sleep(250)
                                        print("All seeds storage has empty, Removing bot : [ "..getBot().name.." ]")
                                        sleep(250)
                                        if setting.mode.removeBot then
                                            removeBot(getBot().name)
                                            sleep(2000)
                                        end
                                        error()
                                    end
                                else
                                    for _, object in pairs(getObjects()) do
                                        if object.id == setting.item.seed then
                                            findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                            sleep(1000)
                                            collect(2)
                                            sleep(1000)
                                            identity.reconnect(world,door,math.floor((object.x)/32), math.floor((object.y)/32))
                                        end
                                        if findItem(setting.item.seed) > 0 then
                                            break
                                        end
                                    end
                                    if setting.mode.splice.access then
                                        for _, object in pairs(getObjects()) do
                                            if object.id == setting.mode.splice.seed then
                                                findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                                sleep(1000)
                                                collect(2)
                                                sleep(1000)
                                                identity.reconnect(world,door,math.floor((object.x)/32), math.floor((object.y)/32))
                                            end
                                            if findItem(setting.mode.splice.seed) > 0 then
                                                break
                                            end
                                        end
                                    end
                                    sleep(100)
                                    break
                                end
                            else
                                infoid[world] = "WRONG DOOR ID"
                                wrong = false
                                sleep(5000)
                                identity.botinfo("Seeds storage : [ ||"..world.."|| ] is wrong door id, skipped world @everyone")
                                sleep(250)
                                print("Seeds storage : [ "..world.." ] is wrong door id, skipped world")
                                sleep(250)
                                identity.takeseed = identity.takeseed + 1
                                if identity.takeseed > #setting.storage.seed.world then
                                    identity.botinfo("All seeds storage has empty, Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                    sleep(250)
                                    print("All seeds storage has empty, Removing bot : [ "..getBot().name.." ]")
                                    sleep(250)
                                    if setting.mode.removeBot then
                                        removeBot(getBot().name)
                                        sleep(2000)
                                    end
                                    error()
                                end
                            end
                        else
                            infoid[world] = "NUKED"
                            nuked = false
                            sleep(5000)
                            identity.botinfo("Seeds storage : [ ||"..world.."|| ] is NUKED, skipped world @everyone")
                            sleep(250)
                            print("Seeds storage : [ "..world.." ] is NUKED, skipped world")
                            sleep(250)
                            identity.takeseed = identity.takeseed + 1
                            if identity.takeseed > #setting.storage.seed.world then
                                identity.botinfo("All seeds storage has empty, Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                sleep(250)
                                print("All seeds storage has empty, Removing bot : [ "..getBot().name.." ]")
                                sleep(250)
                                if setting.mode.removeBot then
                                    removeBot(getBot().name)
                                    sleep(2000)
                                end
                                error()
                            end
                        end
                    else
                        subserver = false
                        sleep(5000)
                        print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                        sleep(250)
                        identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                        sleep(120000)
                        goto Here
                    end
                else
                    level = false
                    sleep(5000)
                    print("World : "..world.." has level limit, change ur level world limit")
                    sleep(250)
                    identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                    sleep(250)
                    error()
                end
            else
                people = false
                sleep(5000)
                print("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(250)
                identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(120000)
                goto Here
            end
        else
            server = false
            sleep(5000)
            print("Bot : "..name.." idiot server, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("Bot : "..name.." idiot server, sleeping for 2 minutes@everyone")
            sleep(120000)
            goto Here
        end
    end
	infoid[world] = ""..identity.itemFloat(setting.seed)..""
end

identity.line = function(threads)
    identity.param = 0
    ::Check::
    if findItem(98) == 0 and account.takepickaxe.access and getBot().status == "online" then
        identity.takepickaxe(threads)
        sleep(250)
        goto Check
    end
    setJob("Set up Line")
    sleep(250)
    if not setting.mode.generate or setting.typescript == "sellgems" then
        ::Here::
        world = identity.splitt(setting.storage.pnb.world[index],"[^:]+")[1]
        door = identity.splitt(setting.storage.pnb.world[index],"[^:]+")[2]
        identity.warp(world,door)
        sleep(250)
        identity.webhookinfo()
        sleep(250)
        if not server then
            if not people then
                if not level then
                    if not subserver then
                        if not nuked then
                            if not wrong then
                                if identity.itemFloat(112) >= setting.storage.pnb.limitgems then
                                    while findItem(setting.item.block) > 0 do
                                        identity.storingblocks(threads)
                                        sleep(250)
                                    end
                                    while findItem(setting.item.seed) > 0 do
                                        identity.storingseeds(threads)
                                        sleep(250)
                                    end
                                    identity.warp(find,"")
                                    sleep(250)
                                    if setting.mode.removeBot then
                                        identity.botinfo("Gems at world pnb has reached limit")
                                        sleep(250)
                                        print("Gems at world pnb has reached limit")
                                        sleep(250)
                                        removeBot(getBot().name)
                                        sleep(2000)
                                        error()
                                    else
                                        identity.botinfo("Gems at world pnb has reached limit")
                                        sleep(250)
                                        print("Gems at world pnb has reached limit")
                                        sleep(250)
                                        error()
                                    end
                                else
                                    if setting.type == "nogaut" then
                                        if setting.mode.pnbtile == 1 then
                                            identity.botline = setting.mode.pnbtile + 3
                                            for _,tile in pairs(getTiles()) do
                                                for strs,bot in pairs(getBots()) do
                                                    if bot.name == getBot().name then
                                                        findPath(barisX - identity.param,barisY)
                                                        sleep(1000)
                                                        identity.reconnect(world,door,barisX,barisY)
                                                        break
                                                    else
                                                        identity.param = identity.param + identity.botline
                                                    end
                                                end
                                                break
                                            end
                                        else
                                            identity.botline = setting.mode.pnbtile + 1
                                            for _,tile in pairs(getTiles()) do
                                                for strs,bot in pairs(getBots()) do
                                                    if bot.name == getBot().name then
                                                        findPath(barisX - identity.param,barisY)
                                                        sleep(1000)
                                                        identity.reconnect(world,door,barisX,barisY)
                                                        break
                                                    else
                                                        identity.param = identity.param + identity.botline
                                                    end
                                                end
                                                break
                                            end
                                        end
                                    elseif setting.type == "gaut" then
                                        identity.botline = setting.mode.pnbtile
                                        for _,tile in pairs(getTiles()) do
                                            for strs,bot in pairs(getBots()) do
                                                if bot.name == getBot().name then
                                                    findPath(barisX - identity.param,barisY)
                                                    sleep(1000)
                                                    identity.reconnect(world,door,barisX,barisY)
                                                    break
                                                else
                                                    identity.param = identity.param + identity.botline
                                                end
                                            end
                                            break
                                        end
                                    end
                                end
                            else
                                wrong = false
                                sleep(5000)
                                identity.botinfo("World pnb : [ ||"..world.."|| ] is Wrong door, terminated script @everyone")
                                sleep(250)
                                print("World pnb : [ "..world.." ] is Wrong door, terminated script")
                                sleep(250)
                                error()
                            end
                        else
                            nuked = false
                            sleep(5000)
                            identity.botinfo("World pnb : [ ||"..world.."|| ] is NUKED @everyone")
                            sleep(250)
                            print("World pnb : [ "..world.." ] is NUKED, terminated script")
                            sleep(250)
                            error()
                        end
                    else
                        subserver = false
                        sleep(5000)
                        print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                        sleep(250)
                        identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                        sleep(120000)
                        goto Here
                    end
                else
                    level = false
                    sleep(5000)
                    print("World : "..world.." has level limit, change ur level world limit")
                    sleep(250)
                    identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                    sleep(250)
                    error()
                end
            else
                people = false
                sleep(5000)
                print("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(250)
                identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(120000)
                goto Here
            end
        else
            server = false
            sleep(5000)
            print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
            sleep(120000)
            goto Here
        end
        identity.pnb(threads,world,door)
        sleep(250)
    else
        ::Here::
        botX = math.floor(getBot().x / 32)
        botY = math.floor(getBot().y / 32)
        world = find
        identity.warp(world,"")
        sleep(250)
        identity.webhookinfo()
        sleep(250)
        if not server then
            if not people then
                if not level then
                    if not subserver then
                        if not nuked then
                            if not wrong then
                                for _, tile in pairs(getTiles()) do
                                    if tile.fg == 226 then
                                        findPath(tile.x,tile.y - 1)
                                        sleep(100)
                                        identity.reconnect(world,"",tile.x,tile.y - 1)
                                    end
                                end
                                identity.pnb(threads,world,"")
                                sleep(250)
                            else
                                wrong = false
                                sleep(5000)
                                identity.botinfo("World pnb : [ ||"..world.."|| ] is Wrong door, terminated script @everyone")
                                sleep(250)
                                print("World pnb : [ "..world.." ] is Wrong door, terminated script")
                                sleep(250)
                                error()
                            end
                        else
                            nuked = false
                            sleep(5000)
                            identity.botinfo("World pnb : [ ||"..world.."|| ] is NUKED @everyone")
                            sleep(250)
                            print("World pnb : [ "..world.." ] is NUKED, terminated script")
                            sleep(250)
                            error()
                        end
                    else
                        subserver = false
                        sleep(5000)
                        print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                        sleep(250)
                        identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                        sleep(120000)
                        goto Here
                    end
                else
                    level = false
                    sleep(5000)
                    print("World : "..world.." has level limit, change ur level world limit")
                    sleep(250)
                    identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                    sleep(250)
                    error()
                end
            else
                people = false
                sleep(5000)
                print("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(250)
                identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(120000)
                goto Here
            end
        else
            server = false
            sleep(5000)
            print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
            sleep(120000)
            goto Here
        end
    end
    if setting.type == "nogaut" then
        if setting.mode.storeseedafterpnb then
            identity.storingseeds(threads)
            sleep(250)
            identity.take(threads)
            sleep(250)
        else
            identity.take(threads)
            sleep(250)
        end
    elseif setting.type == "gaut" then
        world = identity.splitt(setting.storage.pnb.world[index],"[^:]+")[1]
        door = identity.splitt(setting.storage.pnb.world[index],"[^:]+")[2]
        for _, obj in pairs(getObjects()) do
            if obj.id == setting.item.seed then
                findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                sleep(1000)
                collect(2,112)
                sleep(1000)
                identity.reconnect(world,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
            end
        end
        if setting.typescript == "pnb" then
            if findItem(setting.item.seed) > 0 then
                identity.storingseeds(threads)
                sleep(250)
                identity.take(threads)
                sleep(250)
            else
                identity.take(threads)
                sleep(250)
            end
        elseif setting.typescript == "sellgems" then
            if findItem(setting.item.seed) > 0 then
                identity.storingseeds(threads)
                sleep(250)
                identity.harvest(threads)
                sleep(250)
            end
        end
    end
end

identity.pnb = function(threads,name,id)
    setJob(string.upper(setting.typescript))
    sleep(250)
    collectSet(false)
    sleep(250)
    botX = math.floor(getBot().x / 32)
    botY = math.floor(getBot().y / 32)
    if setting.mode.pnbtile == 1 then
        while findItem(setting.item.block) >= setting.mode.pnbtile do
            if getTile(botX,botY + tileY).bg ~= 0 or getTile(botX, botY + tileY).fg ~= 0 then
                punch(0,tileY)
                sleep(setting.delay.punch)
                identity.reconnect(name,id,botX,botY)
            end
            if getTile(botX,botY + tileY).bg == 0 or getTile(botX, botY + tileY).fg == 0 then
                place(setting.item.block,0,tileY)
                sleep(setting.delay.place)
                identity.reconnect(name,id,botX,botY)
            end
            if setting.type == "nogaut" then
                collect(3)
                sleep(30)
            end
            if getBot().level >= account.botswitch.maxlevel and account.botswitch.access then
                identity.checkaccount(threads)
                sleep(250)
                identity.line(threads)
                sleep(250)
            end
            if findItem(setting.item.seed) >= setting.item.amountseed then
                identity.storingseeds(threads)
                sleep(250)
                identity.line(threads)
                sleep(250)
            elseif findItem(112) >= setting.pack.mingems and setting.pack.buypack then
                identity.buying(threads)
                sleep(250)
                identity.storingpacks(threads)
                sleep(250)
                identity.line(threads)
                sleep(250)
            end
        end
    else
        while findItem(setting.item.block) >= setting.mode.pnbtile do
            while identity.placeitem(botX,botY) do
                for _,i in pairs(tilebreak) do
                    if getTile(botX + i,botY + tileY).fg == 0 and getTile(botX + i,botY + tileY).bg == 0 then
                        place(setting.item.block,i,tileY)
                        sleep(setting.delay.place)
                        identity.reconnect(name,id,botX,botY)
                    end
                end
            end
            while identity.punchitem(botX,botY) do
                for _,i in pairs(tilebreak) do
                    if getTile(botX + i,botY + tileY).fg ~= 0 or getTile(botX + i,botY + tileY).bg ~= 0 then
                        punch(i,tileY)
                        sleep(setting.delay.punch)
                        identity.reconnect(name,id,botX,botY)
                    end
                end
            end
            if setting.type == "nogaut" then
                collect(3)
                sleep(30)
            end
            if getBot().level >= account.botswitch.maxlevel and account.botswitch.access then
                identity.checkaccount(threads)
                sleep(250)
                identity.line(threads)
                sleep(250)
            end
            if findItem(setting.item.seed) >= setting.item.amountseed then
                identity.storingseeds(threads)
                sleep(250)
                identity.line(threads)
                sleep(250)
            elseif findItem(112) >= setting.pack.mingems and setting.pack.buypack then
                identity.buying(threads)
                sleep(250)
                identity.storingpacks(threads)
                sleep(250)
                identity.line(threads)
                sleep(250)
            end
        end
    end
end

identity.rotate = function(threads)
    collectSet(false)
    sleep(250)
    ::Check::
    setJob("Rotation")
    sleep(250)
    if not setting.mode.generate then
        if getBot().world:upper() ~= threads:upper() then
            ::Here::
            door = setting.farmList.door
            identity.warp(threads,door)
            sleep(250)
            identity.webhookinfo()
            sleep(250)
            if not server then
                if not people then
                    if not level then
                        if not subserver then
                            if not nuked then
                                if not wrong then
                                    setJob("Rotation")
                                    sleep(250)
                                else
                                    wrong = false
                                    sleep(5000)
                                    identity.botinfo("World : [ ||"..threads.."|| ] is Wrong door, terminated script @everyone")
                                    sleep(250)
                                    print("World : [ "..threads.." ] is Wrong door, terminated script")
                                    sleep(250)
                                    error()
                                end
                            else
                                nuked = false
                                sleep(5000)
                                identity.botinfo("World : [ ||"..threads.."|| ] is NUKED @everyone")
                                sleep(250)
                                print("World : [ "..threads.." ] is NUKED, terminated script")
                                sleep(250)
                                error()
                            end
                        else
                            subserver = false
                            sleep(5000)
                            print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                            sleep(250)
                            identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                            sleep(120000)
                            goto Here
                        end
                    else
                        level = false
                        sleep(5000)
                        print("World : "..threads.." has level limit, change ur level world limit")
                        sleep(250)
                        identity.botinfo("World : "..threads.." has level limit, change ur level world limit !, terminated script @everyone")
                        sleep(250)
                        error()
                    end
                else
                    people = false
                    sleep(5000)
                    print("World : "..threads.." has full people, sleeping for 2 minutes")
                    sleep(250)
                    identity.botinfo("World : "..threads.." has full people, sleeping for 2 minutes")
                    sleep(120000)
                    goto Here
                end
            else
                server = false
                sleep(5000)
                print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
                sleep(250)
                identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
                sleep(120000)
                goto Here
            end
        end
        botX = math.floor(getBot().x / 32)
        botY = math.floor(getBot().y / 32)
        if botX > 99 then
            botX = botX - 2
        elseif botX < 3 then
            botX = botX + 2
        end
        while math.floor(getBot().x / 32) ~= botX or math.floor(getBot().y / 32) ~= botY do
            findPath(botX,botY)
            sleep(500)
        end
        if setting.mode.pnbtile == 1 then
            while findItem(setting.item.block) >= setting.mode.pnbtile do
                door = setting.farmList.door
                if getTile(botX,botY + tileY).bg ~= 0 or getTile(botX, botY + tileY).fg ~= 0 then
                    punch(0,tileY)
                    sleep(setting.delay.punch)
                    identity.reconnect(threads,door,botX,botY)
                end
                if getTile(botX,botY + tileY).bg == 0 or getTile(botX, botY + tileY).fg == 0 then
                    place(setting.item.block,0,tileY)
                    sleep(setting.delay.place)
                    identity.reconnect(threads,door,botX,botY)
                end
                collect(2)
                sleep(30)
                if getBot().level >= account.botswitch.maxlevel and account.botswitch.access then
                    identity.checkaccount(threads)
                    sleep(250)
                    identity.harvest(threads)
                    sleep(250)
                end
                if findItem(setting.item.seed) >= setting.item.amountseed then
                    if setting.mode.dontplant then
                        identity.storingseeds(threads)
                        sleep(250)
                        identity.harvest(threads)
                        sleep(250)
                    else
                        identity.plant(threads)
                        sleep(250)
                    end
                elseif findItem(112) >= setting.pack.mingems and setting.pack.buypack then
                    identity.buying(threads)
                    sleep(250)
                    identity.storingpacks(threads)
                    sleep(250)
                    identity.harvest(threads)
                    sleep(250)
                end
            end
        else
            while findItem(setting.item.block) >= setting.mode.pnbtile do
                door = setting.farmList.door
                local counts = 0
                while identity.placeitem(botX,botY) do
                    for _,i in pairs(tilebreak) do
                        if getTile(botX + i,botY + tileY).fg == 0 and getTile(botX + i,botY + tileY).bg == 0 then
                            place(setting.item.block,i,tileY)
                            sleep(setting.delay.place)
                            identity.reconnect(threads,door,botX,botY)
                        end
                    end
                end
                while identity.punchitem(botX,botY) do
                    for _,i in pairs(tilebreak) do
                        if getTile(botX + i,botY + tileY).fg ~= 0 or getTile(botX + i,botY + tileY).bg ~= 0 then
                            punch(i,tileY)
                            sleep(setting.delay.punch)
                            identity.reconnect(threads,door,botX,botY)
                        end
                    end
                end
                collect(3)
                sleep(30)
                if getBot().level >= account.botswitch.maxlevel and account.botswitch.access then
                    identity.checkaccount(threads)
                    sleep(250)
                    identity.harvest(threads)
                    sleep(250)
                end
                if findItem(setting.item.seed) >= setting.item.amountseed then
                    if setting.mode.dontplant then
                        identity.storingseeds(threads)
                        sleep(250)
                        identity.harvest(threads)
                        sleep(250)
                    else
                        identity.plant(threads)
                        sleep(250)
                    end
                elseif findItem(112) >= setting.pack.mingems and setting.pack.buypack then
                    identity.buying(threads)
                    sleep(250)
                    identity.storingpacks(threads)
                    sleep(250)
                    identity.harvest(threads)
                    sleep(250)
                end
            end
        end
    else
        ::Here::
        world = find
        setJob("Rotation")
        sleep(250)
        identity.warp(world,"")
        sleep(250)
        identity.webhookinfo()
        sleep(250)
        if not server then
            if not people then
                if not level then
                    if not subserver then
                        if not nuked then
                            for _, tile in pairs(getTiles()) do
                                if tile.fg == 226 then
                                    findPath(tile.x,tile.y - 1)
                                    sleep(100)
                                    identity.reconnect(world,"",tile.x,tile.y - 1)
                                end
                            end
                            botX = math.floor(getBot().x / 32)
                            botY = math.floor(getBot().y / 32)
                            if setting.mode.pnbtile == 1 then
                                while findItem(setting.item.block) >= setting.mode.pnbtile do
                                    if getTile(botX,botY + tileY).bg ~= 0 or getTile(botX, botY + tileY).fg ~= 0 then
                                        punch(0,tileY)
                                        sleep(setting.delay.punch)
                                        identity.reconnect(world,"",botX,botY)
                                    end
                                    if getTile(botX,botY + tileY).bg == 0 or getTile(botX, botY + tileY).fg == 0 then
                                        place(setting.item.block,0,tileY)
                                        sleep(setting.delay.place)
                                        identity.reconnect(world,"",botX,botY)
                                    end
                                    collect(2)
                                    sleep(30)
                                    if getBot().level >= account.botswitch.maxlevel and account.botswitch.access then
                                        identity.checkaccount(threads)
                                        sleep(250)
                                        goto Here
                                    end
                                    if findItem(setting.item.seed) >= setting.item.amountseed then
                                        if setting.mode.dontplant then
                                            identity.storingseeds(threads)
                                            sleep(250)
                                            goto Here
                                        else
                                            identity.plant(threads)
                                            sleep(250)
                                        end
                                    elseif findItem(112) >= setting.pack.mingems and setting.pack.buypack then
                                        identity.buying(threads)
                                        sleep(250)
                                        identity.storingpacks(threads)
                                        sleep(250)
                                        goto Here
                                    end
                                end
                            else
                                while findItem(setting.item.block) >= setting.mode.pnbtile do
                                    while identity.placeitem(botX,botY) do
                                        for _,i in pairs(tilebreak) do
                                            if getTile(botX + i,botY + tileY).fg == 0 and getTile(botX + i,botY + tileY).bg == 0 then
                                                place(setting.item.block,i,tileY)
                                                sleep(setting.delay.place)
                                                identity.reconnect(world,"",botX,botY)
                                            end
                                        end
                                    end
                                    while identity.punchitem(botX,botY) do
                                        for _,i in pairs(tilebreak) do
                                            if getTile(botX + i,botY + tileY).fg ~= 0 or getTile(botX + i,botY + tileY).bg ~= 0 then
                                                punch(i,tileY)
                                                sleep(setting.delay.punch)
                                                identity.reconnect(world,"",botX,botY)
                                            end
                                        end
                                    end
                                    collect(3)
                                    sleep(30)
                                    if getBot().level >= account.botswitch.maxlevel and account.botswitch.access then
                                        identity.checkaccount(threads)
                                        sleep(250)
                                        goto Here
                                    end
                                    if findItem(setting.item.seed) >= setting.item.amountseed then
                                        if setting.mode.dontplant then
                                            identity.storingseeds(threads)
                                            sleep(250)
                                            goto Here
                                        else
                                            identity.plant(threads)
                                            sleep(250)
                                        end
                                    elseif findItem(112) >= setting.pack.mingems and setting.pack.buypack then
                                        identity.buying(threads)
                                        sleep(250)
                                        identity.storingpacks(threads)
                                        sleep(250)
                                        goto Here
                                    end
                                end
                            end
                        else
                            nuked = false
                            sleep(5000)
                            identity.botinfo("World : [ ||"..world.."|| ] is NUKED @everyone")
                            sleep(250)
                            print("World pnb : [ "..world.." ] is NUKED, terminated script")
                            sleep(250)
                            error()
                        end
                    else
                        subserver = false
                        sleep(5000)
                        print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                        sleep(250)
                        identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                        sleep(120000)
                        goto Here
                    end
                else
                    level = false
                    sleep(5000)
                    print("World : "..world.." has level limit, change ur level world limit")
                    sleep(250)
                    identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                    sleep(250)
                    error()
                end
            else
                people = false
                sleep(5000)
                print("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(250)
                identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(120000)
                goto Here
            end
        else
            server = false
            sleep(5000)
            print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
            sleep(120000)
            goto Here
        end
    end
    identity.recycles(threads)
end

identity.recycles = function(threads)
    if setting.mode.recycle then
        setJob("Recycling items")
        sleep(250)
        if setting.typescript == "ht" then
            if findItem(setting.item.block) > 0 then
                sendPacket("action|trash\n|itemID|" .. setting.item.block,2)
                sleep(4000)
                sendPacket("action|dialog_return\ndialog_name|trash_item\nitemID|" .. setting.item.block .. "|\ncount|" .. findItem(setting.item.block),2)
                sleep(4000)
            end
        elseif setting.typescript == "pnb" or setting.typescript == "rotation" then
            for i , list in ipairs(setting.mode.trashList) do
                if findItem(list) > setting.mode.amount then
                    sendPacket("action|trash\n|itemID|" .. list,2)
                    sleep(4000)
                    sendPacket("action|dialog_return\ndialog_name|trash_item\nitemID|" .. list .. "|\ncount|" .. findItem(list),2)
                    sleep(4000)
                end
            end
        end
    end
end

identity.rechecking = function(threads)
    ::BACK::
    setJob("Rechecking "..string.upper(setting.typescript).."")
    sleep(250)
    door = setting.farmList.door
    identity.warp(threads,door)
    sleep(250)
    identity.webhookinfo()
    sleep(250)
    if not server then
        if not people then
            if not level then
                if not subserver then
                    if not nuked then
                        if not wrong then
                            for i = 1,2 do
                                if setting.typescript == "ht" then
                                    for _, tile in pairs(getTiles()) do
                                        if tile.fg == setting.item.seed and tile.ready then
                                            if getBot().level >= account.botswitch.maxlevel and account.botswitch.access then
                                                identity.checkaccount(threads)
                                                sleep(250)
                                                goto BACK
                                            end
                                            if findItem(setting.item.support.items) == 0 then
                                                if setting.item.support.access then
                                                    identity.support(threads)
                                                    sleep(250)
                                                    goto BACK
                                                end
                                            end
                                            if findItem(setting.item.block) > 180 then
                                                if setting.item.recycle then
                                                    identity.recycles(threads)
                                                    sleep(250)
                                                else
                                                    identity.storingblocks(threads)
                                                    sleep(250)
                                                    goto BACK
                                                end
                                            end
                                            if findItem(setting.item.event[1]) > setting.item.amount then
                                                identity.storingevents(threads)
                                                sleep(250)
                                                goto BACK
                                            elseif findItem(setting.item.seed) > 180 then
                                                identity.storingseeds(threads)
                                                sleep(250)
                                                goto BACK
                                            elseif findItem(112) > setting.pack.mingems and setting.pack.buypack then
                                                identity.buying(threads)
                                                sleep(250)
                                                identity.storingpacks(threads)
                                                sleep(250)
                                                goto BACK
                                            end
                                            door = setting.farmList.door
                                            findPath(tile.x,tile.y)
                                            sleep(setting.delay.harvest)
                                            identity.reconnect(threads,door,tile.x,tile.y)
                                            if tile.fg == setting.item.seed then
                                                punch(0,0)
                                                sleep(setting.delay.harvest)
                                                identity.reconnect(threads,door,tile.x,tile.y)
                                            end
                                            if setting.mode.ignoregems then
                                                collect(setting.mode.range,112)
                                            else
                                                collect(setting.mode.range)
                                            end
                                            sleep(setting.delay.collect)
                                        end
                                    end
                                    for _, obj in pairs(getObjects()) do
                                        if obj.id == setting.item.block then
                                            if identity.itemFloat(setting.item.block) ~= 0 then
                                                findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                                                sleep(setting.delay.collect)
                                                if setting.mode.ignoregems then
                                                    collect(setting.mode.range,112)
                                                else
                                                    collect(setting.mode.range)
                                                end
                                                sleep(setting.delay.collect)
                                                identity.reconnect(threads,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
                                            end
                                            if findItem(setting.item.block) > 180 then
                                                if setting.item.recycle then
                                                    identity.recycles(threads)
                                                    sleep(250)
                                                else
                                                    identity.storingblocks(threads)
                                                    sleep(250)
                                                    goto BACK
                                                end
                                            end
                                            if findItem(setting.item.event[1]) > setting.item.amount then
                                                identity.storingevents(threads)
                                                sleep(250)
                                                goto BACK
                                            elseif findItem(setting.item.seed) > 180 then
                                                identity.storingseeds(threads)
                                                sleep(250)
                                                goto BACK
                                            elseif findItem(112) > setting.pack.mingems and setting.pack.buypack then
                                                identity.buying(threads)
                                                sleep(250)
                                                identity.storingpacks(threads)
                                                sleep(250)
                                                goto BACK
                                            end
                                        end
                                    end
                                elseif setting.typescript == "pt" then
                                    for _, tile in pairs(getTiles()) do
                                        if tile.fg == 0 and getTile(tile.x, tile.y + 1).flags ~= 0 then
                                            if setting.mode.splice.access then
                                                if findItem(setting.item.seed) == 0 or findItem(setting.mode.seed) == 0 then
                                                    identity.takingseed(threads)
                                                    sleep(250)
                                                    goto BACK
                                                end
                                            else
                                                if findItem(setting.item.seed) == 0 then
                                                    identity.takingseed(threads)
                                                    sleep(250)
                                                    goto BACK
                                                end
                                            end
                                            door = setting.farmList.door
                                            findPath(tile.x,tile.y)
                                            sleep(setting.delay.plant)
                                            if setting.mode.splice.access then
                                                while getTile(tile.x,tile.y).fg ~= setting.item.seed do
                                                    place(setting.item.seed,0,0)
                                                    sleep(setting.delay.plant)
                                                    identity.reconnect(threads,door,tile.x,tile.y)
                                                end
                                                while getTile(tile.x,tile.y).fg == setting.item.seed do
                                                    place(setting.mode.splice.seed,0,0)
                                                    sleep(setting.delay.plant)
                                                    identity.reconnect(threads,door,tile.x,tile.y)
                                                end
                                            else
                                                if getTile(tile.x,tile.y).fg ~= setting.item.seed then
                                                    place(setting.item.seed,0,0)
                                                    sleep(setting.delay.plant)
                                                    identity.reconnect(threads,door,tile.x,tile.y)
                                                end
                                            end
                                        end
                                    end
                                elseif setting.typescript == "rotation" or setting.typescript == "sellgems" then
                                    for _, tile in pairs(getTiles()) do
                                        if tile.fg == setting.item.seed and tile.ready then
                                            if findItem(setting.item.support.items) == 0 then
                                                if setting.item.support.access then
                                                    identity.support(threads)
                                                    sleep(250)
                                                    goto BACK
                                                end
                                            end
                                            if getBot().level >= account.botswitch.maxlevel and account.botswitch.access then
                                                identity.checkaccount(threads)
                                                sleep(250)
                                                goto BACK
                                            end
                                            if findItem(setting.item.block) > 180 then
                                                identity.rotate(threads)
                                                sleep(250)
                                            end
                                            if findItem(setting.item.event[1]) > setting.item.amount then
                                                identity.storingevents(threads)
                                                sleep(250)
                                                goto BACK
                                            elseif findItem(setting.item.seed) > 180 then
                                                identity.storingseeds(threads)
                                                sleep(250)
                                                goto BACK
                                            elseif findItem(112) > setting.pack.mingems and setting.pack.buypack then
                                                identity.buying(threads)
                                                sleep(250)
                                                identity.storingpacks(threads)
                                                sleep(250)
                                                goto BACK
                                            end
                                            door = setting.farmList.door
                                            findPath(tile.x,tile.y)
                                            sleep(setting.delay.harvest)
                                            identity.reconnect(threads,door,tile.x,tile.y)
                                            if tile.fg == setting.item.seed then
                                                punch(0,0)
                                                sleep(setting.delay.harvest)
                                                identity.reconnect(threads,door,tile.x,tile.y)
                                            end
                                            if setting.mode.ignoregems then
                                                collect(setting.mode.range,112)
                                            else
                                                collect(setting.mode.range)
                                            end
                                            sleep(setting.delay.collect)
                                        end
                                    end
                                end
                                for _, obj in pairs(getObjects()) do
                                    if obj.id == setting.item.block then
                                        if identity.itemFloat(setting.item.block) ~= 0 then
                                            findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                                            sleep(setting.delay.collect)
                                            if setting.mode.ignoregems then
                                                collect(setting.mode.range,112)
                                            else
                                                collect(setting.mode.range)
                                            end
                                            sleep(setting.delay.collect)
                                            identity.reconnect(threads,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
                                        end
                                        if findItem(setting.item.block) > 180 then
                                            if setting.mode.generate then
                                                identity.rotate(threads)
                                                sleep(250)
                                                goto BACK
                                            else
                                                identity.rotate(threads)
                                                sleep(250)
                                            end
                                        end
                                        if findItem(setting.item.event[1]) > setting.item.amount then
                                            identity.storingevents(threads)
                                            sleep(250)
                                            goto BACK
                                        elseif findItem(setting.item.seed) > 180 then
                                            identity.storingseeds(threads)
                                            sleep(250)
                                            goto BACK
                                        elseif findItem(112) > setting.pack.mingems and setting.pack.buypack then
                                            identity.buying(threads)
                                            sleep(250)
                                            identity.storingpacks(threads)
                                            sleep(250)
                                            goto BACK
                                        end
                                    end
                                end
                                for _, tile in pairs(getTiles()) do
                                    if tile.fg == setting.item.block or tile.bg == setting.item.block then
                                        findPath(tile.x,tile.y)
                                        sleep(250)
                                        door = setting.farmList.door
                                        identity.reconnect(threads,door,tile.x,tile.y)
                                        local count = 0
                                        while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).bg == setting.item.block or getTile(math.floor(getBot().x / 32), math.floor(getBot().y / 32)).fg == setting.item.block do
                                            punch(0,0)
                                            sleep(setting.delay.punch)
                                            identity.reconnect(threads,door,tile.x,tile.y)
                                            count = count + 1
                                            if count == 30 then
                                                print("This world : "..threads.." has burn, skipped world")
                                                identity.botinfo("This world : "..threads.." has burn, skipped world")
                                                break
                                            end
                                        end
                                        collect(3)
                                        sleep(30)
                                        if getBot().level >= account.botswitch.maxlevel and account.botswitch.access then
                                            identity.checkaccount(threads)
                                            sleep(250)
                                            goto BACK
                                        end
                                    end
                                end
                                if not setting.mode.dontplant then
                                    for _, tile in pairs(getTiles()) do
                                        if tile.fg == 0 and getTile(tile.x, tile.y + 1).flags ~= 0 then
                                            if findItem(setting.item.seed) == 0 then
                                                if setting.mode.plantwhendone then
                                                    identity.takingseed(threads)
                                                    sleep(250)
                                                    goto BACK
                                                else
                                                    break
                                                end
                                            end
                                            door = setting.farmList.door
                                            findPath(tile.x,tile.y)
                                            sleep(setting.delay.plant)
                                            if getTile(tile.x,tile.y).fg ~= setting.item.seed then
                                                place(setting.item.seed,0,0)
                                                sleep(setting.delay.plant)
                                                identity.reconnect(threads,door,tile.x,tile.y)
                                            end
                                        end
                                    end
                                    if findItem(setting.item.seed) > setting.item.amountseed then
                                        identity.storingseeds(threads)
                                        sleep(250)
                                        goto BACK
                                    end
                                end
                            end
                        else
                            wrong = false
                            sleep(5000)
                            identity.botinfo("World : [ ||"..threads.."|| ] is Wrong door, terminated script @everyone")
                            sleep(250)
                            print("World : [ "..threads.." ] is Wrong door, terminated script")
                            sleep(250)
                            error()
                        end
                    else
                        nuked = false
                        sleep(5000)
                        identity.botinfo("World : [ ||"..threads.."|| ] is NUKED @everyone")
                        sleep(250)
                        print("World : [ "..threads.." ] is NUKED, terminated script")
                        sleep(250)
                        error()
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                    sleep(250)
                    identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                    sleep(120000)
                    goto BACK
                end
            else
                level = false
                sleep(5000)
                print("World : "..threads.." has level limit, change ur level world limit")
                sleep(250)
                identity.botinfo("World : "..threads.." has level limit, change ur level world limit !, terminated script @everyone")
                sleep(250)
                error()
            end
        else
            people = false
            sleep(5000)
            print("World : "..threads.." has full people, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("World : "..threads.." has full people, sleeping for 2 minutes")
            sleep(120000)
            goto BACK
        end
    else
        server = false
        sleep(5000)
        print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
        sleep(250)
        identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
        sleep(120000)
        goto BACK
    end
end

identity.takejammer = function(threads)
    ::BACK::
    setJob("Take jammers")
    sleep(250)
    world = identity.splitt(setting.mode.worldjammer[index],"[^:]+")[1]
    door = identity.splitt(setting.mode.worldjammer[index],"[^:]+")[2]
    identity.warp(world,door)
    sleep(250)
    identity.webhookinfo()
    sleep(250)
    if not server then
        if not people then
            if not level then
                if not subserver then
                    if not nuked then
                        if not wrong then
                            if identity.itemFloat(226) > 0 then
                                for _, object in pairs(getObjects()) do
                                    if object.id == 226 then
                                        findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                        sleep(1000)
                                        collect(2,112)
                                        sleep(1000)
                                        identity.reconnect(world,door,math.floor((object.x)/32), math.floor((object.y)/32))
                                    end
                                    if findItem(226) > 0 then
                                        move(-1,0)
                                        sleep(1000)
                                        drop(226,findItem(226) - 1)
                                        sleep(2000)
                                        identity.reconnect(world,door,math.floor((object.x)/32), math.floor((object.y)/32))
                                        break
                                    end
                                end
                            end
                        else
                            wrong = false
                            sleep(5000)
                            identity.botinfo("World to take jammers is wrong door id, terminated sc @everyone")
                            sleep(250)
                            print("World to take jammers is wrong door id, terminated sc")
                            sleep(250)
                            error()
                        end
                    else
                        nuked = false
                        sleep(5000)
                        identity.botinfo("World to take jammers is NUKED, terminated sc @everyone")
                        sleep(250)
                        print("World to take jammers is NUKED, terminated sc")
                        sleep(250)
                        error()
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                    sleep(250)
                    identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                    sleep(120000)
                    goto BACK
                end
            else
                level = false
                sleep(5000)
                print("World to take jammers has level limit, change ur level world limit")
                sleep(250)
                identity.botinfo("World to take jammers has level limit, change ur level world limit !, terminated script @everyone")
                sleep(250)
                error()
            end
        else
            people = false
            sleep(5000)
            print("World to take jammers has full people, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("World to take jammers has full people, sleeping for 2 minutes")
            sleep(120000)
            goto BACK
        end
    else
        server = false
        sleep(5000)
        print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
        sleep(250)
        identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
        sleep(120000)
        goto BACK
    end
end

identity.storingjammer = function()
    ::BACK::
    setJob("Storing jammer")
    sleep(250)
    world = identity.splitt(setting.mode.worldjammer[index],"[^:]+")[1]
    door = identity.splitt(setting.mode.worldjammer[index],"[^:]+")[2]
    identity.warp(world,door)
    sleep(250)
    identity.webhookinfo()
    sleep(250)
    if not server then
        if not people then
            if not level then
                if not subserver then
                    if not nuked then
                        if not wrong then
                            while findItem(226) > 0 do
                                drop(226)
                                sleep(setting.delay.drop)
                                move(0,-1)
                                identity.reconnect(world,door,0,-1)
                            end
                        else
                            wrong = false
                            sleep(5000)
                            identity.botinfo("World to storing jammers is wrong door id, terminated sc @everyone")
                            sleep(250)
                            print("World to storing jammers is wrong door id, terminated sc")
                            sleep(250)
                            error()
                        end
                    else
                        nuked = false
                        sleep(5000)
                        identity.botinfo("World to storing jammers is NUKED, terminated sc @everyone")
                        sleep(250)
                        print("World to storing jammers is NUKED, terminated sc")
                        sleep(250)
                        error()
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                    sleep(250)
                    identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                    sleep(120000)
                    goto BACK
                end
            else
                level = false
                sleep(5000)
                print("World to storing jammers has level limit, change ur level world limit")
                sleep(250)
                identity.botinfo("World : to storing jammers has level limit, change ur level world limit !, terminated script @everyone")
                sleep(250)
                error()
            end
        else
            people = false
            sleep(5000)
            print("World to storing jammers has full people, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("World to storing jammers has full people, sleeping for 2 minutes")
            sleep(120000)
            goto BACK
        end
    else
        server = false
        sleep(5000)
        print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
        sleep(250)
        identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
        sleep(120000)
        goto BACK
    end
end

identity.support = function(threads)
    ::BACK::
    setJob("Take support items")
    sleep(250)
    world = identity.splitt(setting.item.support.world[index],"[^:]+")[1]
    door = identity.splitt(setting.item.support.world[index],"[^:]+")[2]
    identity.warp(world,door)
    sleep(250)
    identity.webhookinfo()
    sleep(250)
    if not server then
        if not people then
            if not level then
                if not subserver then
                    if not nuked then
                        if not wrong then
                            if findItem(setting.item.support.items) == 0 and identity.itemFloat(setting.item.support.items) >= setting.item.support.keep then
                                for _, obj in pairs(getObjects()) do
                                    if obj.id == setting.item.support.items then
                                        findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                                        sleep(1000)
                                        collect(setting.mode.range)
                                        sleep(1000)
                                        if findItem(setting.item.support.items) > 0  then
                                            move(-1,0)
                                            sleep(500)
                                            wear(setting.item.support.items)
                                            sleep(500)
                                            drop(setting.item.support.items,findItem(setting.item.support.items) - setting.item.support.keep)
                                            sleep(500)
                                            print("[ ||"..getBot().name.."|| ] Success take and wear the support items!")
                                            sleep(250)
                                            identity.botinfo("[ ||"..getBot().name.."|| ] Success take and wear the support items!")
                                            sleep(250)
                                            break
                                        end
                                    end
                                end
                            else
                                print("Support item is empty, Drop the support item right now!")
                                sleep(250)
                                identity.botinfo("Support item is empty, Drop the support item right now! @everyone")
                                sleep(250)
                            end
                        else
                            wrong = false
                            sleep(5000)
                            print("Id door world take support items is wrong, check ur id door!")
                            sleep(250)
                            identity.botinfo("Id door world take support items is wrong, check ur id door! @everyone")
                            sleep(250)
                            error()
                        end
                    else
                        nuked = false
                        sleep(5000)
                        print("World take support items is nuked, check ur world!")
                        sleep(250)
                        identity.botinfo("World take support items is nuked, check ur world! @everyone")
                        sleep(250)
                        error()
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                    sleep(250)
                    identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                    sleep(120000)
                    goto BACK
                end
            else
                level = false
                sleep(5000)
                print("World take support has level limit, change ur level world limit !, terminated script @everyone")
                sleep(250)
                identity.botinfo("World take support has level limit, change ur level world limit !, terminated script @everyone")
                sleep(250)
                error()
            end
        else
            people = false
            sleep(5000)
            print("World take support has full people, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("World take support has full people, sleeping for 2 minutes")
            sleep(120000)
            goto BACK
        end
    else
        server = false
        sleep(5000)
        print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
        sleep(250)
        identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
        sleep(120000)
        goto BACK
    end
end

identity.harvest = function(threads)
    ::BACK::
    setJob("Harvesting")
    sleep(250)
    door = setting.farmList.door
    identity.warp(threads,door)
    sleep(250)
    identity.webhookinfo()
    sleep(250)
    if not server then
        if not people then
            if not level then
                if not subserver then
                    if not nuked then
                        if not wrong then
                            if findItem(setting.item.block) >= 180 then
                                sendPacket("action|trash\n|itemID|" .. setting.item.block,2)
                                sleep(4000)
                                sendPacket("action|dialog_return\ndialog_name|trash_item\nitemID|" .. setting.item.block .. "|\ncount|" .. (findItem(setting.item.block) - 178),2)
                                sleep(4000)
                            end
                            tileA = 99
                            tileB = 0
                            tileC = -1
                            tileD = 0
                            for y = -1, 53 do
                                for x = tileA, tileB, tileC do
                                    if getTile(x,y).fg == setting.item.seed and getTile(x,y).ready then
                                        if getBot().level >= account.botswitch.maxlevel and account.botswitch.access then
                                            identity.checkaccount(threads)
                                            sleep(250)
                                            goto BACK
                                        end
                                        if findItem(setting.item.block) >= 180 then
                                            if setting.typescript == "ht" then
                                                if setting.mode.recycle then
                                                    identity.recycles(threads)
                                                    sleep(250)
                                                else
                                                    identity.storingblocks(threads)
                                                    sleep(250)
                                                    goto BACK
                                                end
                                            end
                                            if setting.typescript == "rotation" then
                                                identity.rotate(threads)
                                                sleep(250)
                                                goto BACK
                                            end
                                            if setting.typescript == "sellgems" then
                                                identity.line(threads)
                                                sleep(250)
                                                goto BACK
                                            end
                                        end
                                        if findItem(setting.item.support.items) == 0 then
                                            if setting.item.support.access then
                                                identity.support(threads)
                                                sleep(250)
                                                goto BACK
                                            end
                                        end
                                        if findItem(setting.item.event[1]) > setting.item.amount then
                                            identity.storingevents(threads)
                                            sleep(250)
                                            goto BACK
                                        elseif findItem(setting.item.seed) > setting.item.amountseed then
                                            identity.storingseeds(threads)
                                            sleep(250)
                                            goto BACK
                                        elseif findItem(112) > setting.pack.mingems and setting.pack.buypack then
                                            identity.buying(threads)
                                            sleep(250)
                                            identity.storingpacks(threads)
                                            sleep(250)
                                            goto BACK
                                        end
                                        door = setting.farmList.door
                                        findPath(x,y)
                                        sleep(setting.delay.harvest)
                                        identity.reconnect(threads,door,x,y)
                                        if getTile(x,y).fg == setting.item.seed then
                                            punch(0,0)
                                            sleep(setting.delay.harvest)
                                            identity.reconnect(threads,door,x,y)
                                        end
                                        if setting.mode.ptht then
                                            if getTile(x,y).fg ~= setting.item.seed and findItem(setting.item.seed) > 0 then
                                                place(setting.item.seed,0,0)
                                                sleep(setting.delay.plant)
                                                identity.reconnect(threads,door,x,y)
                                            end
                                        end
                                        if setting.mode.ignoregems then
                                            collect(setting.mode.range,112)
                                        else
                                            collect(setting.mode.range)
                                        end
                                        sleep(setting.delay.collect)
                                    end
                                end
                                if tileD == 1 then
                                    if tileA == 0 then
                                        tileA = 99
                                        tileB = 0
                                        tileC = -1
                                        tileD = 0
                                    elseif tileA == 99 then
                                        tileA = 0
                                        tileB = 99
                                        tileC = 1
                                        tileD = 0
                                    end
                                elseif tileD == 0 then
                                    tileD = tileD + 1
                                end
                            end
                            if findItem(setting.item.block) >= setting.mode.pnbtile then
                                if setting.typescript == "ht" then
                                    if setting.mode.recycle then
                                        identity.recycles(threads)
                                        sleep(250)
                                    else
                                        identity.storingblocks(threads)
                                        sleep(250)
                                        goto BACK
                                    end
                                end
                                if setting.typescript == "rotation" and not setting.mode.generate then
                                    while math.floor(getBot().x / 32) ~= 7 or math.floor(getBot().y / 32) ~= 0 do
                                        findPath(7,0)
                                        sleep(100)
                                    end
                                    identity.rotate(threads)
                                    sleep(250)
                                    goto BACK
                                end
                                if setting.typescript == "sellgems" then
                                    identity.line(threads)
                                    sleep(250)
                                    goto BACK
                                end
                            end
                        else
                            wrong = false
                            sleep(5000)
                            print("Id door world "..threads.." is wrong, check ur id door!")
                            sleep(250)
                            identity.botinfo("Id door world "..threads.." is wrong, check ur id door! @everyone")
                            sleep(250)
                            error()
                        end
                    else
                        nuked = false
                        sleep(5000)
                        print("World "..threads.." is nuked, check ur world!")
                        sleep(250)
                        identity.botinfo("World "..threads.." is nuked, check ur world! @everyone")
                        sleep(250)
                        error()
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                    sleep(250)
                    identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                    sleep(120000)
                    goto BACK
                end
            else
                level = false
                sleep(5000)
                print("World : "..threads.." has level limit, change ur level world limit")
                sleep(250)
                identity.botinfo("World : "..threads.." has level limit, change ur level world limit !, terminated script @everyone")
                sleep(250)
                error()
            end
        else
            people = false
            sleep(5000)
            print("World : "..threads.." has full people, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("World : "..threads.." has full people, sleeping for 2 minutes")
            sleep(120000)
            goto BACK
        end
    else
        server = false
        sleep(5000)
        print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
        sleep(250)
        identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
        sleep(120000)
        goto BACK
    end
end

identity.plant = function(threads)
    ::BACK::
    setJob("Planting")
    sleep(250)
    door = setting.farmList.door
    identity.warp(threads,door)
    sleep(250)
    identity.webhookinfo()
    sleep(250)
    if not server then
        if not people then
            if not level then
                if not subserver then
                    if not nuked then
                        if not wrong then
                            tileA = 99
                            tileB = 0
                            tileC = -1
                            tileD = 0
                            for y = -1, 53 do
                                for x = tileA, tileB, tileC do
                                    if getTile(x, y).fg == 0 and getTile(x, y + 1).flags ~= 0 and findItem(setting.item.seed) > 0  then
                                        if setting.typescript == "pt" then
                                            if setting.mode.splice.access then
                                                if findItem(setting.item.seed) == 0 or findItem(setting.mode.splice.seed) == 0 then
                                                    identity.takingseed(threads)
                                                    sleep(250)
                                                    goto BACK
                                                end
                                            else
                                                if findItem(setting.mode.splice.seed) == 0 then
                                                    identity.takingseed(threads)
                                                    sleep(250)
                                                    goto BACK
                                                end
                                            end
                                        end
                                        door = setting.farmList.door
                                        findPath(x,y)
                                        sleep(setting.delay.plant)
                                        identity.reconnect(threads,door,x,y)
                                        if setting.mode.splice.access then
                                            while getTile(x,y).fg ~= setting.item.seed do
                                                place(setting.item.seed,0,0)
                                                sleep(setting.delay.plant)
                                                identity.reconnect(threads,door,x,y)
                                            end
                                            while getTile(x,y).fg == setting.item.seed do
                                                place(setting.mode.splice.seed,0,0)
                                                sleep(setting.delay.plant)
                                                identity.reconnect(threads,door,x,y)
                                            end
                                        else
                                            if getTile(x,y).fg ~= setting.item.seed then
                                                place(setting.item.seed,0,0)
                                                sleep(setting.delay.plant)
                                                identity.reconnect(threads,door,x,y)
                                            end
                                        end
                                    end
                                end
                                if tileD == 1 then
                                    if tileA == 0 then
                                        tileA = 99
                                        tileB = 0
                                        tileC = -1
                                        tileD = 0
                                    elseif tileA == 99 then
                                        tileA = 0
                                        tileB = 99
                                        tileC = 1
                                        tileD = 0
                                    end
                                elseif tileD == 0 then
                                    tileD = tileD + 1
                                end
                            end
                            if setting.typescript == "pnb" or setting.typescript == "rotation" then
                                identity.harvest(threads)
                                sleep(250)
                                if findItem(setting.item.seed) > 50 then
                                    identity.storingseeds(threads)
                                    sleep(250)
                                    goto BACK
                                end
                            end
                        else
                            wrong = false
                            sleep(5000)
                            print("Id door world "..threads.." is wrong, check ur id door!")
                            sleep(250)
                            identity.botinfo("Id door world "..threads.." is wrong, check ur id door! @everyone")
                            sleep(250)
                            error()
                        end
                    else
                        nuked = false
                        sleep(5000)
                        print("World "..threads.." is nuked, check ur world!")
                        sleep(250)
                        identity.botinfo("World "..threads.." is nuked, check ur world! @everyone")
                        sleep(250)
                        error()
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                    sleep(250)
                    identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                    sleep(120000)
                    goto BACK
                end
            else
                level = false
                sleep(5000)
                print("World : "..threads.." has level limit, change ur level world limit")
                sleep(250)
                identity.botinfo("World : "..threads.." has level limit, change ur level world limit !, terminated script @everyone")
                sleep(250)
                error()
            end
        else
            people = false
            sleep(5000)
            print("World : "..threads.." has full people, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("World : "..threads.." has full people, sleeping for 2 minutes")
            sleep(120000)
            goto BACK
        end
    else
        server = false
        sleep(5000)
        print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
        sleep(250)
        identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
        sleep(120000)
        goto BACK
    end
end

identity.collectobj = function(threads)
    ::BACK::
    setJob(string.upper(setting.typescript))
    sleep(250)
    door = setting.farmList.door
    identity.warp(threads,door)
    sleep(250)
    identity.webhookinfo()
    sleep(250)
    if not server then
        if not people then
            if not level then
                if not subserver then
                    if not nuked then
                        if not wrong then
                            if setting.typescript == "collect" then
                                for _, obj in pairs(getObjects()) do
                                    if obj.id == setting.item.block then
                                        if identity.itemFloat(setting.item.block) ~= 0 then
                                            findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                                            sleep(setting.delay.collect)
                                            if setting.mode.ignoregems then
                                                collect(setting.mode.range,112)
                                            else
                                                collect(setting.mode.range)
                                            end
                                            sleep(setting.delay.collect)
                                            door = setting.farmList.door
                                            identity.reconnect(threads,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
                                        end
                                        if findItem(setting.item.block) > 180 then
                                            if setting.item.recycle then
                                                identity.recycles(threads)
                                                sleep(250)
                                            else
                                                identity.storingblocks(threads)
                                                sleep(250)
                                                goto BACK
                                            end
                                        end
                                        if findItem(setting.item.event[1]) > setting.item.amount then
                                            identity.storingevents(threads)
                                            sleep(250)
                                            goto BACK
                                        elseif findItem(setting.item.seed) > 180 then
                                            identity.storingseeds(threads)
                                            sleep(250)
                                            goto BACK
                                        elseif findItem(112) > setting.pack.mingems and setting.pack.buypack then
                                            identity.buying(threads)
                                            sleep(250)
                                            identity.storingpacks(threads)
                                            sleep(250)
                                            goto BACK
                                        end
                                    end
                                end
                            elseif setting.typescript == "gems" then
                                for _, obj in pairs(getObjects()) do
                                    if obj.id == 112 then
                                        if identity.itemFloat(obj.id) ~= 0 then
                                            findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                                            sleep(setting.delay.collect)
                                            if setting.mode.ignoregems then
                                                collect(setting.mode.range,112)
                                            else
                                                collect(setting.mode.range)
                                            end
                                            sleep(setting.delay.collect)
                                            door = setting.farmList.door
                                            identity.reconnect(threads,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
                                        end
                                        if findItem(112) > setting.pack.mingems and setting.pack.buypack  then
                                            identity.buying(threads)
                                            sleep(250)
                                            identity.storingpacks(threads)
                                            sleep(250)
                                            goto BACK
                                        end
                                    end
                                end
                            end
                        else
                            wrong = false
                            sleep(5000)
                            print("Id door world collect "..threads.." is wrong, check ur id door!")
                            sleep(250)
                            identity.botinfo("Id door world collect "..threads.."  is wrong, check ur id door! @everyone")
                            sleep(250)
                            error()
                        end
                    else
                        nuked = false
                        sleep(5000)
                        print("World collect "..threads.."  is nuked, check ur world!")
                        sleep(250)
                        identity.botinfo("World collect "..threads.."  is nuked, check ur world! @everyone")
                        sleep(250)
                        error()
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                    sleep(250)
                    identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                    sleep(120000)
                    goto BACK
                end
            else
                level = false
                sleep(5000)
                print("World collect : "..threads.." has level limit, change ur level world limit")
                sleep(250)
                identity.botinfo("World collect : "..threads.." has level limit, change ur level world limit !, terminated script @everyone")
                sleep(250)
                error()
            end
        else
            people = false
            sleep(5000)
            print("World collect : "..threads.." has full people, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("World collect : "..threads.." has full people, sleeping for 2 minutes")
            sleep(120000)
            goto BACK
        end
    else
        server = false
        sleep(5000)
        print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
        sleep(250)
        identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
        sleep(120000)
        goto BACK
    end
end

identity.placeall = function()
    world = find
    ::BACK::
    if findItem(226) > 0 then
        while getTile(math.floor(getBot().x / 32)+1,math.floor(getBot().y / 32) - 1).fg ~= 226 do
            place(226,1,-1)
            sleep(setting.delay.place)
        end
        while getTile(math.floor(getBot().x / 32)+1,math.floor(getBot().y / 32) - 1).fg == 226 do
            punch(1,-1)
            sleep(setting.delay.place)
            break
        end
        if findItem(226) > 0 then
            goto BACK
        end
    end
end

identity.hook = function(varlist)
	if varlist[0] == "OnDialogRequest" and varlist[1]:find("add_label_with_icon|big|`wUnstable Tesseract``|left|6948|") then
		if varlist[1]:find("The machine is currently empty!") then 
            sleep(1000)
		else
			amount = varlist[1]:match("The machine contains (%d+)")
			amounts = 1
			if tonumber(amount) >= 200 then 
				amounts = 200 
			end
			if tonumber(amount) < 200 then 
				amounts = tonumber(amount) 
			end
            local utpkt = string.format([[action|dialog_return
            dialog_name|itemsucker_block
            tilex|%d|
            tiley|%d|
            buttonClicked|retrieveitem
            chk_enablesucking|1
            ]], varlist[1]:match("tilex|(%d+)"), varlist[1]:match("tiley|(%d+)"))
            sleep(1000)
            sendPacket(utpkt,2)
            sleep(1000)
            local utpkt = string.format([[action|dialog_return
            dialog_name|itemremovedfromsucker
            tilex|%d|
            tiley|%d|
            itemtoremove|%d]], varlist[1]:match("tilex|(%d+)") , varlist[1]:match("tiley|(%d+)") , amounts)
            sleep(1000)
            sendPacket(utpkt,2)
            sleep(1000)
        end
    end
	if varlist[0] == "OnDialogRequest" and varlist[1]:find("add_label_with_icon|big|`wGaia's Beacon``|left|6946|") then
		if varlist[1]:find("The machine is currently empty!") then 
            sleep(1000)
		else
			ammount = varlist[1]:match("The machine contains (%d+)")
			ammounts = 1
			if tonumber(ammount) >= 200 then 
				ammounts = 200 
			end
			if tonumber(ammount) < 200 then 
				ammounts = tonumber(ammount) 
			end
            local gaiapkt = string.format([[action|dialog_return
            dialog_name|itemsucker_seed
            tilex|%d|
            tiley|%d|
            buttonClicked|retrieveitem
            chk_enablesucking|1
            ]], varlist[1]:match("tilex|(%d+)") , varlist[1]:match("tiley|(%d+)"))
            sleep(1000)
            sendPacket(gaiapkt,2)
            sleep(1000)
            local gaiapkt = string.format([[action|dialog_return
            dialog_name|itemremovedfromsucker
            tilex|%d|
            tiley|%d|
            itemtoremove|%d]], varlist[1]:match("tilex|(%d+)") , varlist[1]:match("tiley|(%d+)") , ammounts)
            sleep(1000)
            sendPacket(gaiapkt,2)
            sleep(1000)
        end
	end
end

addHook("onvariant","retrieve",identity.hook)

identity.setposition = function()
    ::Here::
    world = identity.splitt(setting.storage.pnb.world[index],"[^:]+")[1]
    door = identity.splitt(setting.storage.pnb.world[index],"[^:]+")[2]
    setJob("Retrieve")
    sleep(250)
    identity.warp(world,door)
    sleep(250)
    if not server then
        if not people then
            if not level then
                if not subserver then
                    if not nuked then
                        if not wrong then
                            if string.upper(getBot().name) == string.upper(setting.retrieve.ut) then
                                for i , tile in pairs(getTiles()) do
                                    if tile.fg == 6948 then
                                        findPath(tile.x,tile.y-1)
                                        sleep(1000)
                                        identity.utx = math.floor(getBot().x / 32)
                                        identity.uty = math.floor(getBot().y / 32)
                                        sleep(1000)
                                    end
                                end
                            elseif string.upper(getBot().name) == string.upper(setting.retrieve.gaia) then
                                for i, tile in pairs(getTiles()) do
                                    if tile.fg == 6946 then
                                        findPath(tile.x,tile.y-1)
                                        sleep(1000)
                                        identity.gaiax = math.floor(getBot().x / 32)
                                        identity.gaiay = math.floor(getBot().y / 32)
                                        sleep(1000)
                                    end
                                end
                            end
                        else
                            wrong = false
                            sleep(5000)
                            identity.botinfo("World pnb : [ ||"..world.."|| ] is Wrong door, terminated script @everyone")
                            sleep(250)
                            print("World pnb : [ "..world.." ] is Wrong door, terminated script")
                            sleep(250)
                            error()
                        end
                    else
                        nuked = false
                        sleep(5000)
                        identity.botinfo("World pnb : [ ||"..world.."|| ] is NUKED @everyone")
                        sleep(250)
                        print("World pnb : [ "..world.." ] is NUKED, terminated script")
                        sleep(250)
                        error()
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                    sleep(250)
                    identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                    sleep(120000)
                    goto Here
                end
            else
                level = false
                sleep(5000)
                print("World : "..getBot().world.." has level limit, change ur level world limit")
                sleep(250)
                identity.botinfo("World : "..getBot().world.." has level limit, change ur level world limit !, terminated script @everyone")
                sleep(250)
                error()
            end
        else
            people = false
            sleep(5000)
            print("World : "..getBot().world.." has full people, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("World : "..getBot().world.." has full people, sleeping for 2 minutes")
            sleep(120000)
            goto Here
        end
    else
        server = false
        sleep(5000)
        print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
        sleep(250)
        identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
        sleep(120000)
        goto Here
    end
end

identity.storingretrieve = function()
    world = identity.splitt(setting.storage.pnb.world[index],"[^:]+")[1]
    door = identity.splitt(setting.storage.pnb.world[index],"[^:]+")[2]
    if string.upper(getBot().name) == string.upper(setting.retrieve.gaia) then
        for i, tile in pairs(getTiles()) do
            if tile.fg == 6946 then
                findPath(tile.x,tile.y - 1)
                sleep(1000)
                identity.reconnect(world,door,tile.x,tile.y - 1)
            end
            while findItem(setting.item.seed) > 0 do
                drop(setting.item.seed)
                sleep(setting.delay.drop)
                move(1,0)
                sleep(250)
                identity.reconnect(world,door,tile.x,tile.y - 1)
            end
        end
    elseif string.upper(getBot().name) == string.upper(setting.retrieve.ut) then
        for i, tile in pairs(getTiles()) do
            if tile.fg == 6948 then
                findPath(tile.x,tile.y - 1)
                sleep(1000)
                identity.reconnect(world,door,tile.x,tile.y - 1)
            end
            while findItem(setting.item.block) > 0 do
                drop(setting.item.block)
                sleep(setting.delay.drop)
                move(1,0)
                sleep(250)
                identity.reconnect(world,door,tile.x,tile.y - 1)
            end
        end
    end
end

if BizzantiuM.version == "1.0" and BizzantiuM.handler == "akbarsht" then
    sleep(math.random(setting.delay.running*1000))
    if findItem(9640) > 0 then
        ::SUCK::
        identity.warp(find,"")
        while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32) - 1).fg ~= 9640 do
            place(9640,0,-1)
            sleep(setting.delay.place)
        end
        if findItem(9640) > 0 then
            goto SUCK
        end
    end
    ::Check::
    if findItem(98) == 0 and account.takepickaxe.access and getBot().status == "online" then
        identity.takepickaxe(threads)
        sleep(250)
        goto Check
    end
    if setting.mode.generate then
        ::HERE::
        if findItem(226) == 0 then
            identity.takejammer(threads)
            sleep(250)
            goto HERE
        else
            setJob("Generating worlds")
            sleep(250)
            identity.botinfo("Bot : "..getBot().name.." is generating a new world")
            sleep(250)
            identity.warp(find,"")
            sleep(250)
            identity.reconnect(find,"")
            sleep(250)
            if not server then
                if not people then
                    if not level then
                        if not subserver then
                            if not nuked then
                                identity.placeall()
                                sleep(250)
                                identity.botinfo("Bot : "..getBot().name.." success generating a new world, the world name is : "..find.."")
                                sleep(250)
                                identity.writeJammer('"'..find..'",')
                                if findItem(226) > 0 then
                                    goto HERE
                                end
                            else
                                nuked = false
                                sleep(5000)
                                print("World generate is NUKED!, check ur world !!")
                                sleep(250)
                                identity.botinfo("World generate is NUKED!, check ur world !! @everyone")
                                sleep(250)
                                goto HERE
                            end
                        else
                            subserver = false
                            sleep(5000)
                            print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                            sleep(250)
                            identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                            sleep(120000)
                            goto HERE
                        end
                    else
                        level = false
                        sleep(5000)
                        print("World generate has level limit, Trying to generate world again")
                        sleep(250)
                        identity.botinfo("World generate has level limit, Trying to generate world again! @everyone")
                        sleep(250)
                        goto HERE
                    end
                else
                    people = false
                    sleep(5000)
                    print("World generate has full people, sleeping for 2 minutes")
                    sleep(250)
                    identity.botinfo("World generate has full people, sleeping for 2 minutes")
                    sleep(120000)
                    goto HERE
                end
            else
                server = false
                sleep(5000)
                print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
                sleep(250)
                identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes @everyone")
                sleep(120000)
                goto HERE
            end
        end
    end
    if setting.mode.breakjammer then
        identity.breakjammers()
        sleep(250)
        error()
    end
    if setting.typescript == "pnb" then
        if findItem(setting.item.block) >= setting.mode.pnbtile then
            identity.line(threads)
            sleep(250)
        else
            identity.take(threads)
            sleep(250)
        end
    end
    if string.upper(getBot().name) == string.upper(setting.retrieve.ut) or string.upper(getBot().name) == string.upper(setting.retrieve.gaia) then
        identity.setposition()
        sleep(250)
        while true do
            if string.upper(getBot().name) == string.upper(setting.retrieve.ut) then
                findPath(identity.utx,identity.uty)
                sleep(setting.delay.retrieve)
                wrench(0,1)
                sleep(setting.delay.retrieve*2)
                identity.storingretrieve()
                sleep(250)
                identity.reconnect(world,door,identity.utx,identity.uty)
                sleep(250)
            elseif string.upper(getBot().name) == string.upper(setting.retrieve.gaia) then
                findPath(identity.gaiax,identity.gaiay)
                sleep(setting.delay.retrieve)
                wrench(0,1)
                sleep(setting.delay.retrieve*2)
                identity.storingretrieve()
                sleep(250)
                identity.reconnect(world,door,identity.gaiax,identity.gaiay)
                sleep(250)
            end
        end
    end
    while true do
        for idx, value in ipairs(worlds) do
            ::BACK::
            door = setting.farmList.door
            setJob(string.upper(setting.typescript))
            sleep(250)
            identity.warp(value,door)
            sleep(250)
            identity.webhookinfo()
            sleep(250)
            if not server then
                if not people then
                    if not level then
                        if not subserver then
                            if not nuked then
                                if not wrong then
                                    if setting.typescript == "ht" or setting.typescript == "rotation" or setting.typescript == "sellgems" then
                                        identity.harvest(value)
                                        sleep(250)
                                        identity.rechecking(value)
                                        sleep(250)
                                    elseif setting.typescript == "collect" or setting.typescript == "gems" then
                                        identity.collectobj(value)
                                        sleep(250)
                                    elseif setting.typescript == "pt" then
                                        identity.plant(value)
                                        sleep(250)
                                    end
                                else
                                    wrong = false
                                    sleep(5000)
                                    identity.writeFiles("[ "..value.." ] is wrong id")
                                    sleep(1000)
                                    print(""..value.." is wrong door id, skipped world")
                                    sleep(250)
                                    identity.botinfo("[ ||"..value.."|| ] is wrong door id, skipped world @everyone")
                                    sleep(250)
                                end
                            else
                                nuked = false
                                sleep(5000)
                                identity.writeFiles("[ "..value.." ] is NUKED !!")
                                sleep(1000)
                                print(""..value.." is NUKED!, check ur world !!")
                                sleep(250)
                                identity.botinfo("[ ||"..value.."|| ] is NUKED!, check ur world !! @everyone")
                                sleep(250)
                            end
                        else
                            subserver = false
                            sleep(5000)
                            print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                            sleep(250)
                            identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                            sleep(120000)
                            goto BACK
                        end
                    else
                        level = false
                        sleep(5000)
                        print("World : "..value.." has level limit, change ur level world limit")
                        sleep(250)
                        identity.botinfo("World : "..value.." has level limit, change ur level world limit ! @everyone")
                        sleep(250)
                    end
                else
                    people = false
                    sleep(5000)
                    print("World : "..value.." has full people, sleeping for 2 minutes")
                    sleep(250)
                    identity.botinfo("World : "..value.." has full people, sleeping for 2 minutes")
                    sleep(120000)
                    goto BACK
                end
            else
                server = false
                sleep(5000)
                print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
                sleep(250)
                identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes @everyone")
                sleep(120000)
                goto BACK
            end
        end
        if not setting.mode.looping then
            if findItem(setting.item.block) > 0 then
                identity.storingblocks(threads)
                sleep(250)
            end
            if findItem(setting.item.seed) > 0 then
                identity.storingseeds(threads)
                sleep(250)
            end
            setJob("Already finished all world")
            sleep(250)
            print("[ "..getBot().name.." ] Already finished all world, Terminated script!")
            sleep(250)
            identity.botinfo("[ ||"..getBot().name.."|| ] Already finished all world, Terminated script! @everyone")
            sleep(250)
            if setting.mode.generate then
                identity.warp(find,"")
                sleep(250)
                while getTile(math.floor(getBot().x / 32)+1,math.floor(getBot().y / 32) - 1).fg == 226 do
                    punch(1,-1)
                    sleep(setting.delay.place)
                    identity.reconnect(find,"")
                end
                identity.storingjammer(threads)
                sleep(250)
            end
            identity.warp(find,"")  
            sleep(250)
            if setting.mode.removeBot then
                removeBot(getBot().name)
                sleep(1500)
            end
            break 
        end
    end
else
    print("This script made by BizzantuM's server, buy at another server = RESELLER !!")
    sleep(250)
end
